(function (t, e, n, o) {
  "use strict";

  function i(t, e) {
    var o;
    var i;
    var a;
    var s = [];
    var r = 0;
    if (!t || !t.isDefaultPrevented()) {
      t.preventDefault();
      e = e || {};
      if (t && t.data) {
        e = p(t.data.options, e);
      }
      o = e.$target || n(t.currentTarget).trigger("blur");
      if (!(a = n.fancybox.getInstance()) || !a.$trigger || !a.$trigger.is(o)) {
        if (e.selector) {
          s = n(e.selector);
        } else if (i = o.attr("data-fancybox") || "") {
          s = (s = t.data ? t.data.items : []).length ? s.filter("[data-fancybox=\"" + i + "\"]") : n("[data-fancybox=\"" + i + "\"]");
        } else {
          s = [o];
        }
        if ((r = n(s).index(o)) < 0) {
          r = 0;
        }
        (a = n.fancybox.open(s, e, r)).$trigger = o;
      }
    }
  }
  t.console = t.console || {
    info: function (t) {}
  };
  if (n) {
    if (n.fn.fancybox) {
      console.info("fancyBox already initialized");
      return;
    }
    var a = {
      closeExisting: false,
      loop: false,
      gutter: 50,
      keyboard: true,
      preventCaptionOverlap: true,
      arrows: true,
      infobar: true,
      smallBtn: "auto",
      toolbar: "auto",
      buttons: ["zoom", "slideShow", "thumbs", "close"],
      idleTime: 3,
      protect: false,
      modal: false,
      image: {
        preload: false
      },
      ajax: {
        settings: {
          data: {
            fancybox: true
          }
        }
      },
      iframe: {
        tpl: "<iframe id=\"fancybox-frame{rnd}\" name=\"fancybox-frame{rnd}\" class=\"fancybox-iframe\" allowfullscreen=\"allowfullscreen\" allow=\"autoplay; fullscreen\" src=\"\"></iframe>",
        preload: true,
        css: {},
        attr: {
          scrolling: "auto"
        }
      },
      video: {
        tpl: "<video class=\"fancybox-video\" controls controlsList=\"nodownload\" poster=\"{{poster}}\"><source src=\"{{src}}\" type=\"{{format}}\" />Sorry, your browser doesn't support embedded videos, <a href=\"{{src}}\">download</a> and watch with your favorite video player!</video>",
        format: "",
        autoStart: true
      },
      defaultType: "image",
      animationEffect: "zoom",
      animationDuration: 366,
      zoomOpacity: "auto",
      transitionEffect: "fade",
      transitionDuration: 366,
      slideClass: "",
      baseClass: "",
      baseTpl: "<div class=\"fancybox-container\" role=\"dialog\" tabindex=\"-1\"><div class=\"fancybox-bg\"></div><div class=\"fancybox-inner\"><div class=\"fancybox-infobar\"><span data-fancybox-index></span>&nbsp;/&nbsp;<span data-fancybox-count></span></div><div class=\"fancybox-toolbar\">{{buttons}}</div><div class=\"fancybox-navigation\">{{arrows}}</div><div class=\"fancybox-stage\"></div><div class=\"fancybox-caption\"><div class=\"fancybox-caption__body\"></div></div></div></div>",
      spinnerTpl: "<div class=\"fancybox-loading\"></div>",
      errorTpl: "<div class=\"fancybox-error\"><p>{{ERROR}}</p></div>",
      btnTpl: {
        download: "<a download data-fancybox-download class=\"fancybox-button fancybox-button--download\" title=\"{{DOWNLOAD}}\" href=\"javascript:;\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M18.62 17.09V19H5.38v-1.91zm-2.97-6.96L17 11.45l-5 4.87-5-4.87 1.36-1.32 2.68 2.64V5h1.92v7.77z\"/></svg></a>",
        zoom: "<button data-fancybox-zoom class=\"fancybox-button fancybox-button--zoom\" title=\"{{ZOOM}}\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M18.7 17.3l-3-3a5.9 5.9 0 0 0-.6-7.6 5.9 5.9 0 0 0-8.4 0 5.9 5.9 0 0 0 0 8.4 5.9 5.9 0 0 0 7.7.7l3 3a1 1 0 0 0 1.3 0c.4-.5.4-1 0-1.5zM8.1 13.8a4 4 0 0 1 0-5.7 4 4 0 0 1 5.7 0 4 4 0 0 1 0 5.7 4 4 0 0 1-5.7 0z\"/></svg></button>",
        close: "<button data-fancybox-close class=\"fancybox-button fancybox-button--close\" title=\"{{CLOSE}}\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12 10.6L6.6 5.2 5.2 6.6l5.4 5.4-5.4 5.4 1.4 1.4 5.4-5.4 5.4 5.4 1.4-1.4-5.4-5.4 5.4-5.4-1.4-1.4-5.4 5.4z\"/></svg></button>",
        arrowLeft: "<button data-fancybox-prev class=\"fancybox-button fancybox-button--arrow_left\" title=\"{{PREV}}\"><div><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M11.28 15.7l-1.34 1.37L5 12l4.94-5.07 1.34 1.38-2.68 2.72H19v1.94H8.6z\"/></svg></div></button>",
        arrowRight: "<button data-fancybox-next class=\"fancybox-button fancybox-button--arrow_right\" title=\"{{NEXT}}\"><div><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M15.4 12.97l-2.68 2.72 1.34 1.38L19 12l-4.94-5.07-1.34 1.38 2.68 2.72H5v1.94z\"/></svg></div></button>",
        smallBtn: "<button type=\"button\" data-fancybox-close class=\"fancybox-button fancybox-close-small\" title=\"{{CLOSE}}\"><svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1\" viewBox=\"0 0 24 24\"><path d=\"M13 12l5-5-1-1-5 5-5-5-1 1 5 5-5 5 1 1 5-5 5 5 1-1z\"/></svg></button>"
      },
      parentEl: "body",
      hideScrollbar: true,
      autoFocus: true,
      backFocus: true,
      trapFocus: true,
      fullScreen: {
        autoStart: false
      },
      touch: {
        vertical: true,
        momentum: true
      },
      hash: null,
      media: {},
      slideShow: {
        autoStart: false,
        speed: 3000
      },
      thumbs: {
        autoStart: false,
        hideOnClose: true,
        parentEl: ".fancybox-container",
        axis: "y"
      },
      wheel: "auto",
      onInit: n.noop,
      beforeLoad: n.noop,
      afterLoad: n.noop,
      beforeShow: n.noop,
      afterShow: n.noop,
      beforeClose: n.noop,
      afterClose: n.noop,
      onActivate: n.noop,
      onDeactivate: n.noop,
      clickContent: function (t, e) {
        return t.type === "image" && "zoom";
      },
      clickSlide: "close",
      clickOutside: "close",
      dblclickContent: false,
      dblclickSlide: false,
      dblclickOutside: false,
      mobile: {
        preventCaptionOverlap: false,
        idleTime: false,
        clickContent: function (t, e) {
          return t.type === "image" && "toggleControls";
        },
        clickSlide: function (t, e) {
          if (t.type === "image") {
            return "toggleControls";
          } else {
            return "close";
          }
        },
        dblclickContent: function (t, e) {
          return t.type === "image" && "zoom";
        },
        dblclickSlide: function (t, e) {
          return t.type === "image" && "zoom";
        }
      },
      lang: "en",
      i18n: {
        en: {
          CLOSE: "Close",
          NEXT: "Next",
          PREV: "Previous",
          ERROR: "The requested content cannot be loaded. <br/> Please try again later.",
          PLAY_START: "Start slideshow",
          PLAY_STOP: "Pause slideshow",
          FULL_SCREEN: "Full screen",
          THUMBS: "Thumbnails",
          DOWNLOAD: "Download",
          SHARE: "Share",
          ZOOM: "Zoom"
        },
        de: {
          CLOSE: "Schlie&szlig;en",
          NEXT: "Weiter",
          PREV: "Zur&uuml;ck",
          ERROR: "Die angeforderten Daten konnten nicht geladen werden. <br/> Bitte versuchen Sie es sp&auml;ter nochmal.",
          PLAY_START: "Diaschau starten",
          PLAY_STOP: "Diaschau beenden",
          FULL_SCREEN: "Vollbild",
          THUMBS: "Vorschaubilder",
          DOWNLOAD: "Herunterladen",
          SHARE: "Teilen",
          ZOOM: "Vergr&ouml;&szlig;ern"
        }
      }
    };
    var s = n(t);
    var r = n(e);
    var c = 0;
    var l = t.requestAnimationFrame || t.webkitRequestAnimationFrame || t.mozRequestAnimationFrame || t.oRequestAnimationFrame || function (e) {
      return t.setTimeout(e, 1000 / 60);
    };
    var d = t.cancelAnimationFrame || t.webkitCancelAnimationFrame || t.mozCancelAnimationFrame || t.oCancelAnimationFrame || function (e) {
      t.clearTimeout(e);
    };
    var u = function () {
      var t;
      var n = e.createElement("fakeelement");
      var o = {
        transition: "transitionend",
        OTransition: "oTransitionEnd",
        MozTransition: "transitionend",
        WebkitTransition: "webkitTransitionEnd"
      };
      for (t in o) {
        if (n.style[t] !== undefined) {
          return o[t];
        }
      }
      return "transitionend";
    }();
    function f(t) {
      return t && t.length && t[0].offsetHeight;
    }
    function p(t, e) {
      var o = n.extend(true, {}, t, e);
      n.each(e, function (t, e) {
        if (n.isArray(e)) {
          o[t] = e;
        }
      });
      return o;
    }
    function h(t) {
      var o;
      var i;
      return !!t && t.ownerDocument === e && (n(".fancybox-container").css("pointer-events", "none"), o = {
        x: t.getBoundingClientRect().left + t.offsetWidth / 2,
        y: t.getBoundingClientRect().top + t.offsetHeight / 2
      }, i = e.elementFromPoint(o.x, o.y) === t, n(".fancybox-container").css("pointer-events", ""), i);
    }
    function g(t, e, o) {
      var i = this;
      i.opts = p({
        index: o
      }, n.fancybox.defaults);
      if (n.isPlainObject(e)) {
        i.opts = p(i.opts, e);
      }
      if (n.fancybox.isMobile) {
        i.opts = p(i.opts, i.opts.mobile);
      }
      i.id = i.opts.id || ++c;
      i.currIndex = parseInt(i.opts.index, 10) || 0;
      i.prevIndex = null;
      i.prevPos = null;
      i.currPos = 0;
      i.firstRun = true;
      i.group = [];
      i.slides = {};
      i.addContent(t);
      if (i.group.length) {
        i.init();
      }
    }
    n.extend(g.prototype, {
      init: function () {
        var o;
        var i;
        var a = this;
        var s = a.group[a.currIndex].opts;
        if (s.closeExisting) {
          n.fancybox.close(true);
        }
        n("body").addClass("fancybox-active");
        if (!n.fancybox.getInstance() && s.hideScrollbar !== false && !n.fancybox.isMobile && e.body.scrollHeight > t.innerHeight) {
          n("head").append("<style id=\"fancybox-style-noscroll\" type=\"text/css\">.compensate-for-scrollbar{margin-right:" + (t.innerWidth - e.documentElement.clientWidth) + "px;}</style>");
          n("body").addClass("compensate-for-scrollbar");
        }
        i = "";
        n.each(s.buttons, function (t, e) {
          i += s.btnTpl[e] || "";
        });
        o = n(a.translate(a, s.baseTpl.replace("{{buttons}}", i).replace("{{arrows}}", s.btnTpl.arrowLeft + s.btnTpl.arrowRight))).attr("id", "fancybox-container-" + a.id).addClass(s.baseClass).data("FancyBox", a).appendTo(s.parentEl);
        a.$refs = {
          container: o
        };
        ["bg", "inner", "infobar", "toolbar", "stage", "caption", "navigation"].forEach(function (t) {
          a.$refs[t] = o.find(".fancybox-" + t);
        });
        a.trigger("onInit");
        a.activate();
        a.jumpTo(a.currIndex);
      },
      translate: function (t, e) {
        var n = t.opts.i18n[t.opts.lang] || t.opts.i18n.en;
        return e.replace(/\{\{(\w+)\}\}/g, function (t, e) {
          if (n[e] === undefined) {
            return t;
          } else {
            return n[e];
          }
        });
      },
      addContent: function (t) {
        var e;
        var o = this;
        var i = n.makeArray(t);
        n.each(i, function (t, e) {
          var i;
          var a;
          var s;
          var r;
          var c;
          var l = {};
          var d = {};
          if (n.isPlainObject(e)) {
            l = e;
            d = e.opts || e;
          } else if (n.type(e) === "object" && n(e).length) {
            d = (i = n(e)).data() || {};
            (d = n.extend(true, {}, d, d.options)).$orig = i;
            l.src = o.opts.src || d.src || i.attr("href");
            if (!l.type && !l.src) {
              l.type = "inline";
              l.src = e;
            }
          } else {
            l = {
              type: "html",
              src: e + ""
            };
          }
          l.opts = n.extend(true, {}, o.opts, d);
          if (n.isArray(d.buttons)) {
            l.opts.buttons = d.buttons;
          }
          if (n.fancybox.isMobile && l.opts.mobile) {
            l.opts = p(l.opts, l.opts.mobile);
          }
          a = l.type || l.opts.type;
          r = l.src || "";
          if (!a && r) {
            if (s = r.match(/\.(mp4|mov|ogv|webm)((\?|#).*)?$/i)) {
              a = "video";
              l.opts.video.format ||= "video/" + (s[1] === "ogv" ? "ogg" : s[1]);
            } else if (r.match(/(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)/i)) {
              a = "image";
            } else if (r.match(/\.(pdf)((\?|#).*)?$/i)) {
              a = "iframe";
              l = n.extend(true, l, {
                contentType: "pdf",
                opts: {
                  iframe: {
                    preload: false
                  }
                }
              });
            } else if (r.charAt(0) === "#") {
              a = "inline";
            }
          }
          if (a) {
            l.type = a;
          } else {
            o.trigger("objectNeedsType", l);
          }
          l.contentType ||= n.inArray(l.type, ["html", "inline", "ajax"]) > -1 ? "html" : l.type;
          l.index = o.group.length;
          if (l.opts.smallBtn == "auto") {
            l.opts.smallBtn = n.inArray(l.type, ["html", "inline", "ajax"]) > -1;
          }
          if (l.opts.toolbar === "auto") {
            l.opts.toolbar = !l.opts.smallBtn;
          }
          l.$thumb = l.opts.$thumb || null;
          if (l.opts.$trigger && l.index === o.opts.index) {
            l.$thumb = l.opts.$trigger.find("img:first");
            if (l.$thumb.length) {
              l.opts.$orig = l.opts.$trigger;
            }
          }
          if ((!l.$thumb || !l.$thumb.length) && !!l.opts.$orig) {
            l.$thumb = l.opts.$orig.find("img:first");
          }
          if (l.$thumb && !l.$thumb.length) {
            l.$thumb = null;
          }
          l.thumb = l.opts.thumb || (l.$thumb ? l.$thumb[0].src : null);
          if (n.type(l.opts.caption) === "function") {
            l.opts.caption = l.opts.caption.apply(e, [o, l]);
          }
          if (n.type(o.opts.caption) === "function") {
            l.opts.caption = o.opts.caption.apply(e, [o, l]);
          }
          if (!(l.opts.caption instanceof n)) {
            l.opts.caption = l.opts.caption === undefined ? "" : l.opts.caption + "";
          }
          if (l.type === "ajax") {
            if ((c = r.split(/\s+/, 2)).length > 1) {
              l.src = c.shift();
              l.opts.filter = c.shift();
            }
          }
          if (l.opts.modal) {
            l.opts = n.extend(true, l.opts, {
              trapFocus: true,
              infobar: 0,
              toolbar: 0,
              smallBtn: 0,
              keyboard: 0,
              slideShow: 0,
              fullScreen: 0,
              thumbs: 0,
              touch: 0,
              clickContent: false,
              clickSlide: false,
              clickOutside: false,
              dblclickContent: false,
              dblclickSlide: false,
              dblclickOutside: false
            });
          }
          o.group.push(l);
        });
        if (Object.keys(o.slides).length) {
          o.updateControls();
          if ((e = o.Thumbs) && e.isActive) {
            e.create();
            e.focus();
          }
        }
      },
      addEvents: function () {
        var e = this;
        e.removeEvents();
        e.$refs.container.on("click.fb-close", "[data-fancybox-close]", function (t) {
          t.stopPropagation();
          t.preventDefault();
          e.close(t);
        }).on("touchstart.fb-prev click.fb-prev", "[data-fancybox-prev]", function (t) {
          t.stopPropagation();
          t.preventDefault();
          e.previous();
        }).on("touchstart.fb-next click.fb-next", "[data-fancybox-next]", function (t) {
          t.stopPropagation();
          t.preventDefault();
          e.next();
        }).on("click.fb", "[data-fancybox-zoom]", function (t) {
          e[e.isScaledDown() ? "scaleToActual" : "scaleToFit"]();
        });
        s.on("orientationchange.fb resize.fb", function (t) {
          if (t && t.originalEvent && t.originalEvent.type === "resize") {
            if (e.requestId) {
              d(e.requestId);
            }
            e.requestId = l(function () {
              e.update(t);
            });
          } else {
            if (e.current && e.current.type === "iframe") {
              e.$refs.stage.hide();
            }
            setTimeout(function () {
              e.$refs.stage.show();
              e.update(t);
            }, n.fancybox.isMobile ? 600 : 250);
          }
        });
        r.on("keydown.fb", function (t) {
          var o = (n.fancybox ? n.fancybox.getInstance() : null).current;
          var i = t.keyCode || t.which;
          if (i != 9) {
            if (!o.opts.keyboard || t.ctrlKey || t.altKey || t.shiftKey || n(t.target).is("input,textarea,video,audio,select")) {
              return undefined;
            } else if (i === 8 || i === 27) {
              t.preventDefault();
              e.close(t);
              return;
            } else if (i === 37 || i === 38) {
              t.preventDefault();
              e.previous();
              return;
            } else if (i === 39 || i === 40) {
              t.preventDefault();
              e.next();
              return;
            } else {
              e.trigger("afterKeydown", t, i);
              return;
            }
          }
          if (o.opts.trapFocus) {
            e.focus(t);
          }
        });
        if (e.group[e.currIndex].opts.idleTime) {
          e.idleSecondsCounter = 0;
          r.on("mousemove.fb-idle mouseleave.fb-idle mousedown.fb-idle touchstart.fb-idle touchmove.fb-idle scroll.fb-idle keydown.fb-idle", function (t) {
            e.idleSecondsCounter = 0;
            if (e.isIdle) {
              e.showControls();
            }
            e.isIdle = false;
          });
          e.idleInterval = t.setInterval(function () {
            if (++e.idleSecondsCounter >= e.group[e.currIndex].opts.idleTime && !e.isDragging) {
              e.isIdle = true;
              e.idleSecondsCounter = 0;
              e.hideControls();
            }
          }, 1000);
        }
      },
      removeEvents: function () {
        var e = this;
        s.off("orientationchange.fb resize.fb");
        r.off("keydown.fb .fb-idle");
        this.$refs.container.off(".fb-close .fb-prev .fb-next");
        if (e.idleInterval) {
          t.clearInterval(e.idleInterval);
          e.idleInterval = null;
        }
      },
      previous: function (t) {
        return this.jumpTo(this.currPos - 1, t);
      },
      next: function (t) {
        return this.jumpTo(this.currPos + 1, t);
      },
      jumpTo: function (t, e) {
        var o;
        var i;
        var a;
        var s;
        var r;
        var c;
        var l;
        var d;
        var u;
        var p = this;
        var h = p.group.length;
        if (!p.isDragging && !p.isClosing && (!p.isAnimating || !p.firstRun)) {
          t = parseInt(t, 10);
          if (!(a = p.current ? p.current.opts.loop : p.opts.loop) && (t < 0 || t >= h)) {
            return false;
          }
          o = p.firstRun = !Object.keys(p.slides).length;
          r = p.current;
          p.prevIndex = p.currIndex;
          p.prevPos = p.currPos;
          s = p.createSlide(t);
          if (h > 1) {
            if (a || s.index < h - 1) {
              p.createSlide(t + 1);
            }
            if (a || s.index > 0) {
              p.createSlide(t - 1);
            }
          }
          p.current = s;
          p.currIndex = s.index;
          p.currPos = s.pos;
          p.trigger("beforeShow", o);
          p.updateControls();
          s.forcedDuration = undefined;
          if (n.isNumeric(e)) {
            s.forcedDuration = e;
          } else {
            e = s.opts[o ? "animationDuration" : "transitionDuration"];
          }
          e = parseInt(e, 10);
          i = p.isMoved(s);
          s.$slide.addClass("fancybox-slide--current");
          if (o) {
            if (s.opts.animationEffect && e) {
              p.$refs.container.css("transition-duration", e + "ms");
            }
            p.$refs.container.addClass("fancybox-is-open").trigger("focus");
            p.loadSlide(s);
            p.preload("image");
            return;
          }
          c = n.fancybox.getTranslate(r.$slide);
          l = n.fancybox.getTranslate(p.$refs.stage);
          n.each(p.slides, function (t, e) {
            n.fancybox.stop(e.$slide, true);
          });
          if (r.pos !== s.pos) {
            r.isComplete = false;
          }
          r.$slide.removeClass("fancybox-slide--complete fancybox-slide--current");
          if (i) {
            u = c.left - (r.pos * c.width + r.pos * r.opts.gutter);
            n.each(p.slides, function (t, o) {
              o.$slide.removeClass("fancybox-animated").removeClass(function (t, e) {
                return (e.match(/(^|\s)fancybox-fx-\S+/g) || []).join(" ");
              });
              var i = o.pos * c.width + o.pos * o.opts.gutter;
              n.fancybox.setTranslate(o.$slide, {
                top: 0,
                left: i - l.left + u
              });
              if (o.pos !== s.pos) {
                o.$slide.addClass("fancybox-slide--" + (o.pos > s.pos ? "next" : "previous"));
              }
              f(o.$slide);
              n.fancybox.animate(o.$slide, {
                top: 0,
                left: (o.pos - s.pos) * c.width + (o.pos - s.pos) * o.opts.gutter
              }, e, function () {
                o.$slide.css({
                  transform: "",
                  opacity: ""
                }).removeClass("fancybox-slide--next fancybox-slide--previous");
                if (o.pos === p.currPos) {
                  p.complete();
                }
              });
            });
          } else if (e && s.opts.transitionEffect) {
            d = "fancybox-animated fancybox-fx-" + s.opts.transitionEffect;
            r.$slide.addClass("fancybox-slide--" + (r.pos > s.pos ? "next" : "previous"));
            n.fancybox.animate(r.$slide, d, e, function () {
              r.$slide.removeClass(d).removeClass("fancybox-slide--next fancybox-slide--previous");
            }, false);
          }
          if (s.isLoaded) {
            p.revealContent(s);
          } else {
            p.loadSlide(s);
          }
          p.preload("image");
        }
      },
      createSlide: function (t) {
        var e;
        var o;
        var i = this;
        o = (o = t % i.group.length) < 0 ? i.group.length + o : o;
        if (!i.slides[t] && i.group[o]) {
          e = n("<div class=\"fancybox-slide\"></div>").appendTo(i.$refs.stage);
          i.slides[t] = n.extend(true, {}, i.group[o], {
            pos: t,
            $slide: e,
            isLoaded: false
          });
          i.updateSlide(i.slides[t]);
        }
        return i.slides[t];
      },
      scaleToActual: function (t, e, o) {
        var i;
        var a;
        var s;
        var r;
        var c;
        var l = this;
        var d = l.current;
        var u = d.$content;
        var f = n.fancybox.getTranslate(d.$slide).width;
        var p = n.fancybox.getTranslate(d.$slide).height;
        var h = d.width;
        var g = d.height;
        if (!l.isAnimating && !l.isMoved() && !!u && d.type == "image" && !!d.isLoaded && !d.hasError) {
          l.isAnimating = true;
          n.fancybox.stop(u);
          t = t === undefined ? f * 0.5 : t;
          e = e === undefined ? p * 0.5 : e;
          (i = n.fancybox.getTranslate(u)).top -= n.fancybox.getTranslate(d.$slide).top;
          i.left -= n.fancybox.getTranslate(d.$slide).left;
          r = h / i.width;
          c = g / i.height;
          a = f * 0.5 - h * 0.5;
          s = p * 0.5 - g * 0.5;
          if (h > f) {
            if ((a = i.left * r - (t * r - t)) > 0) {
              a = 0;
            }
            if (a < f - h) {
              a = f - h;
            }
          }
          if (g > p) {
            if ((s = i.top * c - (e * c - e)) > 0) {
              s = 0;
            }
            if (s < p - g) {
              s = p - g;
            }
          }
          l.updateCursor(h, g);
          n.fancybox.animate(u, {
            top: s,
            left: a,
            scaleX: r,
            scaleY: c
          }, o || 366, function () {
            l.isAnimating = false;
          });
          if (l.SlideShow && l.SlideShow.isActive) {
            l.SlideShow.stop();
          }
        }
      },
      scaleToFit: function (t) {
        var e;
        var o = this;
        var i = o.current;
        var a = i.$content;
        if (!o.isAnimating && !o.isMoved() && !!a && i.type == "image" && !!i.isLoaded && !i.hasError) {
          o.isAnimating = true;
          n.fancybox.stop(a);
          e = o.getFitPos(i);
          o.updateCursor(e.width, e.height);
          n.fancybox.animate(a, {
            top: e.top,
            left: e.left,
            scaleX: e.width / a.width(),
            scaleY: e.height / a.height()
          }, t || 366, function () {
            o.isAnimating = false;
          });
        }
      },
      getFitPos: function (t) {
        var e;
        var o;
        var i;
        var a;
        var s = t.$content;
        var r = t.$slide;
        var c = t.width || t.opts.width;
        var l = t.height || t.opts.height;
        var d = {};
        return !!t.isLoaded && !!s && !!s.length && (e = n.fancybox.getTranslate(this.$refs.stage).width, o = n.fancybox.getTranslate(this.$refs.stage).height, e -= parseFloat(r.css("paddingLeft")) + parseFloat(r.css("paddingRight")) + parseFloat(s.css("marginLeft")) + parseFloat(s.css("marginRight")), o -= parseFloat(r.css("paddingTop")) + parseFloat(r.css("paddingBottom")) + parseFloat(s.css("marginTop")) + parseFloat(s.css("marginBottom")), c && l || (c = e, l = o), (c *= i = Math.min(1, e / c, o / l)) > e - 0.5 && (c = e), (l *= i) > o - 0.5 && (l = o), t.type === "image" ? (d.top = Math.floor((o - l) * 0.5) + parseFloat(r.css("paddingTop")), d.left = Math.floor((e - c) * 0.5) + parseFloat(r.css("paddingLeft"))) : t.contentType === "video" && (l > c / (a = t.opts.width && t.opts.height ? c / l : t.opts.ratio || 16 / 9) ? l = c / a : c > l * a && (c = l * a)), d.width = c, d.height = l, d);
      },
      update: function (t) {
        var e = this;
        n.each(e.slides, function (n, o) {
          e.updateSlide(o, t);
        });
      },
      updateSlide: function (t, e) {
        var o = this;
        var i = t && t.$content;
        var a = t.width || t.opts.width;
        var s = t.height || t.opts.height;
        var r = t.$slide;
        o.adjustCaption(t);
        if (i && (a || s || t.contentType === "video") && !t.hasError) {
          n.fancybox.stop(i);
          n.fancybox.setTranslate(i, o.getFitPos(t));
          if (t.pos === o.currPos) {
            o.isAnimating = false;
            o.updateCursor();
          }
        }
        o.adjustLayout(t);
        if (r.length) {
          r.trigger("refresh");
          if (t.pos === o.currPos) {
            o.$refs.toolbar.add(o.$refs.navigation.find(".fancybox-button--arrow_right")).toggleClass("compensate-for-scrollbar", r.get(0).scrollHeight > r.get(0).clientHeight);
          }
        }
        o.trigger("onUpdate", t, e);
      },
      centerSlide: function (t) {
        var e = this;
        var o = e.current;
        var i = o.$slide;
        if (!e.isClosing && o) {
          i.siblings().css({
            transform: "",
            opacity: ""
          });
          i.parent().children().removeClass("fancybox-slide--previous fancybox-slide--next");
          n.fancybox.animate(i, {
            top: 0,
            left: 0,
            opacity: 1
          }, t === undefined ? 0 : t, function () {
            i.css({
              transform: "",
              opacity: ""
            });
            if (!o.isComplete) {
              e.complete();
            }
          }, false);
        }
      },
      isMoved: function (t) {
        var e;
        var o;
        var i = t || this.current;
        return !!i && (o = n.fancybox.getTranslate(this.$refs.stage), e = n.fancybox.getTranslate(i.$slide), !i.$slide.hasClass("fancybox-animated") && (Math.abs(e.top - o.top) > 0.5 || Math.abs(e.left - o.left) > 0.5));
      },
      updateCursor: function (t, e) {
        var o;
        var i;
        var a = this;
        var s = a.current;
        var r = a.$refs.container;
        if (s && !a.isClosing && a.Guestures) {
          r.removeClass("fancybox-is-zoomable fancybox-can-zoomIn fancybox-can-zoomOut fancybox-can-swipe fancybox-can-pan");
          i = !!(o = a.canPan(t, e)) || a.isZoomable();
          r.toggleClass("fancybox-is-zoomable", i);
          n("[data-fancybox-zoom]").prop("disabled", !i);
          if (o) {
            r.addClass("fancybox-can-pan");
          } else if (i && (s.opts.clickContent === "zoom" || n.isFunction(s.opts.clickContent) && s.opts.clickContent(s) == "zoom")) {
            r.addClass("fancybox-can-zoomIn");
          } else if (s.opts.touch && (s.opts.touch.vertical || a.group.length > 1) && s.contentType !== "video") {
            r.addClass("fancybox-can-swipe");
          }
        }
      },
      isZoomable: function () {
        var t;
        var e = this;
        var n = e.current;
        if (n && !e.isClosing && n.type === "image" && !n.hasError) {
          if (!n.isLoaded) {
            return true;
          }
          if ((t = e.getFitPos(n)) && (n.width > t.width || n.height > t.height)) {
            return true;
          }
        }
        return false;
      },
      isScaledDown: function (t, e) {
        var o = false;
        var i = this.current;
        var a = i.$content;
        if (t !== undefined && e !== undefined) {
          o = t < i.width && e < i.height;
        } else if (a) {
          o = (o = n.fancybox.getTranslate(a)).width < i.width && o.height < i.height;
        }
        return o;
      },
      canPan: function (t, e) {
        var o = this.current;
        var i = null;
        var a = false;
        if (o.type === "image" && (o.isComplete || t && e) && !o.hasError) {
          a = this.getFitPos(o);
          if (t !== undefined && e !== undefined) {
            i = {
              width: t,
              height: e
            };
          } else if (o.isComplete) {
            i = n.fancybox.getTranslate(o.$content);
          }
          if (i && a) {
            a = Math.abs(i.width - a.width) > 1.5 || Math.abs(i.height - a.height) > 1.5;
          }
        }
        return a;
      },
      loadSlide: function (t) {
        var e;
        var o;
        var i;
        var a = this;
        if (!t.isLoading && !t.isLoaded) {
          t.isLoading = true;
          if (a.trigger("beforeLoad", t) === false) {
            t.isLoading = false;
            return false;
          }
          e = t.type;
          (o = t.$slide).off("refresh").trigger("onReset").addClass(t.opts.slideClass);
          switch (e) {
            case "image":
              a.setImage(t);
              break;
            case "iframe":
              a.setIframe(t);
              break;
            case "html":
              a.setContent(t, t.src || t.content);
              break;
            case "video":
              a.setContent(t, t.opts.video.tpl.replace(/\{\{src\}\}/gi, t.src).replace("{{format}}", t.opts.videoFormat || t.opts.video.format || "").replace("{{poster}}", t.thumb || ""));
              break;
            case "inline":
              if (n(t.src).length) {
                a.setContent(t, n(t.src));
              } else {
                a.setError(t);
              }
              break;
            case "ajax":
              a.showLoading(t);
              i = n.ajax(n.extend({}, t.opts.ajax.settings, {
                url: t.src,
                success: function (e, n) {
                  if (n === "success") {
                    a.setContent(t, e);
                  }
                },
                error: function (e, n) {
                  if (e && n !== "abort") {
                    a.setError(t);
                  }
                }
              }));
              o.one("onReset", function () {
                i.abort();
              });
              break;
            default:
              a.setError(t);
          }
          return true;
        }
      },
      setImage: function (t) {
        var o;
        var i = this;
        setTimeout(function () {
          var e = t.$image;
          if (!i.isClosing && !!t.isLoading && (!e || !e.length || !e[0].complete) && !t.hasError) {
            i.showLoading(t);
          }
        }, 50);
        i.checkSrcset(t);
        t.$content = n("<div class=\"fancybox-content\"></div>").addClass("fancybox-is-hidden").appendTo(t.$slide.addClass("fancybox-slide--image"));
        if (t.opts.preload !== false && t.opts.width && t.opts.height && t.thumb) {
          t.width = t.opts.width;
          t.height = t.opts.height;
          (o = e.createElement("img")).onerror = function () {
            n(this).remove();
            t.$ghost = null;
          };
          o.onload = function () {
            i.afterLoad(t);
          };
          t.$ghost = n(o).addClass("fancybox-image").appendTo(t.$content).attr("src", t.thumb);
        }
        i.setBigImage(t);
      },
      checkSrcset: function (e) {
        var n;
        var o;
        var i;
        var a;
        var s = e.opts.srcset || e.opts.image.srcset;
        if (s) {
          i = t.devicePixelRatio || 1;
          a = t.innerWidth * i;
          (o = s.split(",").map(function (t) {
            var e = {};
            t.trim().split(/\s+/).forEach(function (t, n) {
              var o = parseInt(t.substring(0, t.length - 1), 10);
              if (n === 0) {
                return e.url = t;
              }
              if (o) {
                e.value = o;
                e.postfix = t[t.length - 1];
              }
            });
            return e;
          })).sort(function (t, e) {
            return t.value - e.value;
          });
          for (var r = 0; r < o.length; r++) {
            var c = o[r];
            if (c.postfix === "w" && c.value >= a || c.postfix === "x" && c.value >= i) {
              n = c;
              break;
            }
          }
          if (!n && o.length) {
            n = o[o.length - 1];
          }
          if (n) {
            e.src = n.url;
            if (e.width && e.height && n.postfix == "w") {
              e.height = e.width / e.height * n.value;
              e.width = n.value;
            }
            e.opts.srcset = s;
          }
        }
      },
      setBigImage: function (t) {
        var o = this;
        var i = e.createElement("img");
        var a = n(i);
        t.$image = a.one("error", function () {
          o.setError(t);
        }).one("load", function () {
          var e;
          if (!t.$ghost) {
            o.resolveImageSlideSize(t, this.naturalWidth, this.naturalHeight);
            o.afterLoad(t);
          }
          if (!o.isClosing) {
            if (t.opts.srcset) {
              if (!(e = t.opts.sizes) || e === "auto") {
                e = (t.width / t.height > 1 && s.width() / s.height() > 1 ? "100" : Math.round(t.width / t.height * 100)) + "vw";
              }
              a.attr("sizes", e).attr("srcset", t.opts.srcset);
            }
            if (t.$ghost) {
              setTimeout(function () {
                if (t.$ghost && !o.isClosing) {
                  t.$ghost.hide();
                }
              }, Math.min(300, Math.max(1000, t.height / 1600)));
            }
            o.hideLoading(t);
          }
        }).addClass("fancybox-image").attr("src", t.src).appendTo(t.$content);
        if ((i.complete || i.readyState == "complete") && a.naturalWidth && a.naturalHeight) {
          a.trigger("load");
        } else if (i.error) {
          a.trigger("error");
        }
      },
      resolveImageSlideSize: function (t, e, n) {
        var o = parseInt(t.opts.width, 10);
        var i = parseInt(t.opts.height, 10);
        t.width = e;
        t.height = n;
        if (o > 0) {
          t.width = o;
          t.height = Math.floor(o * n / e);
        }
        if (i > 0) {
          t.width = Math.floor(i * e / n);
          t.height = i;
        }
      },
      setIframe: function (t) {
        var e;
        var o = this;
        var i = t.opts.iframe;
        var a = t.$slide;
        t.$content = n("<div class=\"fancybox-content" + (i.preload ? " fancybox-is-hidden" : "") + "\"></div>").css(i.css).appendTo(a);
        a.addClass("fancybox-slide--" + t.contentType);
        t.$iframe = e = n(i.tpl.replace(/\{rnd\}/g, new Date().getTime())).attr(i.attr).appendTo(t.$content);
        if (i.preload) {
          o.showLoading(t);
          e.on("load.fb error.fb", function (e) {
            this.isReady = 1;
            t.$slide.trigger("refresh");
            o.afterLoad(t);
          });
          a.on("refresh.fb", function () {
            var n;
            var o = t.$content;
            var s = i.css.width;
            var r = i.css.height;
            if (e[0].isReady === 1) {
              try {
                n = e.contents().find("body");
              } catch (t) {}
              if (n && n.length && n.children().length) {
                a.css("overflow", "visible");
                o.css({
                  width: "100%",
                  "max-width": "100%",
                  height: "9999px"
                });
                if (s === undefined) {
                  s = Math.ceil(Math.max(n[0].clientWidth, n.outerWidth(true)));
                }
                o.css("width", s || "").css("max-width", "");
                if (r === undefined) {
                  r = Math.ceil(Math.max(n[0].clientHeight, n.outerHeight(true)));
                }
                o.css("height", r || "");
                a.css("overflow", "auto");
              }
              o.removeClass("fancybox-is-hidden");
            }
          });
        } else {
          o.afterLoad(t);
        }
        e.attr("src", t.src);
        a.one("onReset", function () {
          try {
            n(this).find("iframe").hide().unbind().attr("src", "//about:blank");
          } catch (t) {}
          n(this).off("refresh.fb").empty();
          t.isLoaded = false;
          t.isRevealed = false;
        });
      },
      setContent: function (t, e) {
        var o = this;
        if (!o.isClosing) {
          o.hideLoading(t);
          if (t.$content) {
            n.fancybox.stop(t.$content);
          }
          t.$slide.empty();
          if (function (t) {
            return t && t.hasOwnProperty && t instanceof n;
          }(e) && e.parent().length) {
            if (e.hasClass("fancybox-content") || e.parent().hasClass("fancybox-content")) {
              e.parents(".fancybox-slide").trigger("onReset");
            }
            t.$placeholder = n("<div>").hide().insertAfter(e);
            e.css("display", "inline-block");
          } else if (!t.hasError) {
            if (n.type(e) === "string") {
              e = n("<div>").append(n.trim(e)).contents();
            }
            if (t.opts.filter) {
              e = n("<div>").html(e).find(t.opts.filter);
            }
          }
          t.$slide.one("onReset", function () {
            n(this).find("video,audio").trigger("pause");
            if (t.$placeholder) {
              t.$placeholder.after(e.removeClass("fancybox-content").hide()).remove();
              t.$placeholder = null;
            }
            if (t.$smallBtn) {
              t.$smallBtn.remove();
              t.$smallBtn = null;
            }
            if (!t.hasError) {
              n(this).empty();
              t.isLoaded = false;
              t.isRevealed = false;
            }
          });
          n(e).appendTo(t.$slide);
          if (n(e).is("video,audio")) {
            n(e).addClass("fancybox-video");
            n(e).wrap("<div></div>");
            t.contentType = "video";
            t.opts.width = t.opts.width || n(e).attr("width");
            t.opts.height = t.opts.height || n(e).attr("height");
          }
          t.$content = t.$slide.children().filter("div,form,main,video,audio,article,.fancybox-content").first();
          t.$content.siblings().hide();
          if (!t.$content.length) {
            t.$content = t.$slide.wrapInner("<div></div>").children().first();
          }
          t.$content.addClass("fancybox-content");
          t.$slide.addClass("fancybox-slide--" + t.contentType);
          o.afterLoad(t);
        }
      },
      setError: function (t) {
        t.hasError = true;
        t.$slide.trigger("onReset").removeClass("fancybox-slide--" + t.contentType).addClass("fancybox-slide--error");
        t.contentType = "html";
        this.setContent(t, this.translate(t, t.opts.errorTpl));
        if (t.pos === this.currPos) {
          this.isAnimating = false;
        }
      },
      showLoading: function (t) {
        var e = this;
        if ((t = t || e.current) && !t.$spinner) {
          t.$spinner = n(e.translate(e, e.opts.spinnerTpl)).appendTo(t.$slide).hide().fadeIn("fast");
        }
      },
      hideLoading: function (t) {
        if ((t = t || this.current) && t.$spinner) {
          t.$spinner.stop().remove();
          delete t.$spinner;
        }
      },
      afterLoad: function (t) {
        var e = this;
        if (!e.isClosing) {
          t.isLoading = false;
          t.isLoaded = true;
          e.trigger("afterLoad", t);
          e.hideLoading(t);
          if (!!t.opts.smallBtn && (!t.$smallBtn || !t.$smallBtn.length)) {
            t.$smallBtn = n(e.translate(t, t.opts.btnTpl.smallBtn)).appendTo(t.$content);
          }
          if (t.opts.protect && t.$content && !t.hasError) {
            t.$content.on("contextmenu.fb", function (t) {
              if (t.button == 2) {
                t.preventDefault();
              }
              return true;
            });
            if (t.type === "image") {
              n("<div class=\"fancybox-spaceball\"></div>").appendTo(t.$content);
            }
          }
          e.adjustCaption(t);
          e.adjustLayout(t);
          if (t.pos === e.currPos) {
            e.updateCursor();
          }
          e.revealContent(t);
        }
      },
      adjustCaption: function (t) {
        var e;
        var n = this;
        var o = t || n.current;
        var i = o.opts.caption;
        var a = o.opts.preventCaptionOverlap;
        var s = n.$refs.caption;
        var r = false;
        s.toggleClass("fancybox-caption--separate", a);
        if (a && i && i.length) {
          if (o.pos !== n.currPos) {
            (e = s.clone().appendTo(s.parent())).children().eq(0).empty().html(i);
            r = e.outerHeight(true);
            e.empty().remove();
          } else if (n.$caption) {
            r = n.$caption.outerHeight(true);
          }
          o.$slide.css("padding-bottom", r || "");
        }
      },
      adjustLayout: function (t) {
        var e;
        var n;
        var o;
        var i;
        var a = t || this.current;
        if (a.isLoaded && a.opts.disableLayoutFix !== true) {
          a.$content.css("margin-bottom", "");
          if (a.$content.outerHeight() > a.$slide.height() + 0.5) {
            o = a.$slide[0].style["padding-bottom"];
            i = a.$slide.css("padding-bottom");
            if (parseFloat(i) > 0) {
              e = a.$slide[0].scrollHeight;
              a.$slide.css("padding-bottom", 0);
              if (Math.abs(e - a.$slide[0].scrollHeight) < 1) {
                n = i;
              }
              a.$slide.css("padding-bottom", o);
            }
          }
          a.$content.css("margin-bottom", n);
        }
      },
      revealContent: function (t) {
        var e;
        var o;
        var i;
        var a;
        var s = this;
        var r = t.$slide;
        var c = false;
        var l = false;
        var d = s.isMoved(t);
        var u = t.isRevealed;
        t.isRevealed = true;
        e = t.opts[s.firstRun ? "animationEffect" : "transitionEffect"];
        i = t.opts[s.firstRun ? "animationDuration" : "transitionDuration"];
        i = parseInt(t.forcedDuration === undefined ? i : t.forcedDuration, 10);
        if (!!d || t.pos !== s.currPos || !i) {
          e = false;
        }
        if (e === "zoom") {
          if (t.pos === s.currPos && i && t.type === "image" && !t.hasError && (l = s.getThumbPos(t))) {
            c = s.getFitPos(t);
          } else {
            e = "fade";
          }
        }
        if (e === "zoom") {
          s.isAnimating = true;
          c.scaleX = c.width / l.width;
          c.scaleY = c.height / l.height;
          if ((a = t.opts.zoomOpacity) == "auto") {
            a = Math.abs(t.width / t.height - l.width / l.height) > 0.1;
          }
          if (a) {
            l.opacity = 0.1;
            c.opacity = 1;
          }
          n.fancybox.setTranslate(t.$content.removeClass("fancybox-is-hidden"), l);
          f(t.$content);
          n.fancybox.animate(t.$content, c, i, function () {
            s.isAnimating = false;
            s.complete();
          });
          return;
        } else {
          s.updateSlide(t);
          if (e) {
            n.fancybox.stop(r);
            o = "fancybox-slide--" + (t.pos >= s.prevPos ? "next" : "previous") + " fancybox-animated fancybox-fx-" + e;
            r.addClass(o).removeClass("fancybox-slide--current");
            t.$content.removeClass("fancybox-is-hidden");
            f(r);
            if (t.type !== "image") {
              t.$content.hide().show(0);
            }
            n.fancybox.animate(r, "fancybox-slide--current", i, function () {
              r.removeClass(o).css({
                transform: "",
                opacity: ""
              });
              if (t.pos === s.currPos) {
                s.complete();
              }
            }, true);
            return;
          } else {
            t.$content.removeClass("fancybox-is-hidden");
            if (!u && !!d && t.type === "image" && !t.hasError) {
              t.$content.hide().fadeIn("fast");
            }
            if (t.pos === s.currPos) {
              s.complete();
            }
            return;
          }
        }
      },
      getThumbPos: function (t) {
        var e;
        var o;
        var i;
        var a;
        var s;
        var r = false;
        var c = t.$thumb;
        return !!c && !!h(c[0]) && (e = n.fancybox.getTranslate(c), o = parseFloat(c.css("border-top-width") || 0), i = parseFloat(c.css("border-right-width") || 0), a = parseFloat(c.css("border-bottom-width") || 0), s = parseFloat(c.css("border-left-width") || 0), r = {
          top: e.top + o,
          left: e.left + s,
          width: e.width - i - s,
          height: e.height - o - a,
          scaleX: 1,
          scaleY: 1
        }, e.width > 0 && e.height > 0 && r);
      },
      complete: function () {
        var t;
        var e = this;
        var o = e.current;
        var i = {};
        if (!e.isMoved() && o.isLoaded) {
          if (!o.isComplete) {
            o.isComplete = true;
            o.$slide.siblings().trigger("onReset");
            e.preload("inline");
            f(o.$slide);
            o.$slide.addClass("fancybox-slide--complete");
            n.each(e.slides, function (t, o) {
              if (o.pos >= e.currPos - 1 && o.pos <= e.currPos + 1) {
                i[o.pos] = o;
              } else if (o) {
                n.fancybox.stop(o.$slide);
                o.$slide.off().remove();
              }
            });
            e.slides = i;
          }
          e.isAnimating = false;
          e.updateCursor();
          e.trigger("afterShow");
          if (o.opts.video.autoStart) {
            o.$slide.find("video,audio").filter(":visible:first").trigger("play").one("ended", function () {
              if (Document.exitFullscreen) {
                Document.exitFullscreen();
              } else if (this.webkitExitFullscreen) {
                this.webkitExitFullscreen();
              }
              e.next();
            });
          }
          if (o.opts.autoFocus && o.contentType === "html") {
            if ((t = o.$content.find("input[autofocus]:enabled:visible:first")).length) {
              t.trigger("focus");
            } else {
              e.focus(null, true);
            }
          }
          o.$slide.scrollTop(0).scrollLeft(0);
        }
      },
      preload: function (t) {
        var e;
        var n;
        var o = this;
        if (!(o.group.length < 2)) {
          n = o.slides[o.currPos + 1];
          if ((e = o.slides[o.currPos - 1]) && e.type === t) {
            o.loadSlide(e);
          }
          if (n && n.type === t) {
            o.loadSlide(n);
          }
        }
      },
      focus: function (t, o) {
        var i;
        var a;
        var s = this;
        var r = ["a[href]", "area[href]", "input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])", "select:not([disabled]):not([aria-hidden])", "textarea:not([disabled]):not([aria-hidden])", "button:not([disabled]):not([aria-hidden])", "iframe", "object", "embed", "video", "audio", "[contenteditable]", "[tabindex]:not([tabindex^=\"-\"])"].join(",");
        if (!s.isClosing) {
          if ((i = (i = !t && s.current && s.current.isComplete ? s.current.$slide.find("*:visible" + (o ? ":not(.fancybox-close-small)" : "")) : s.$refs.container.find("*:visible")).filter(r).filter(function () {
            return n(this).css("visibility") !== "hidden" && !n(this).hasClass("disabled");
          })).length) {
            a = i.index(e.activeElement);
            if (t && t.shiftKey) {
              if (a < 0 || a == 0) {
                t.preventDefault();
                i.eq(i.length - 1).trigger("focus");
              }
            } else if (a < 0 || a == i.length - 1) {
              if (t) {
                t.preventDefault();
              }
              i.eq(0).trigger("focus");
            }
          } else {
            s.$refs.container.trigger("focus");
          }
        }
      },
      activate: function () {
        var t = this;
        n(".fancybox-container").each(function () {
          var e = n(this).data("FancyBox");
          if (e && e.id !== t.id && !e.isClosing) {
            e.trigger("onDeactivate");
            e.removeEvents();
            e.isVisible = false;
          }
        });
        t.isVisible = true;
        if (t.current || t.isIdle) {
          t.update();
          t.updateControls();
        }
        t.trigger("onActivate");
        t.addEvents();
      },
      close: function (t, e) {
        var o;
        var i;
        var a;
        var s;
        var r;
        var c;
        var d;
        var u = this;
        var p = u.current;
        function h() {
          u.cleanUp(t);
        }
        return !u.isClosing && !(u.isClosing = true, u.trigger("beforeClose", t) === false ? (u.isClosing = false, l(function () {
          u.update();
        }), 1) : (u.removeEvents(), a = p.$content, o = p.opts.animationEffect, i = n.isNumeric(e) ? e : o ? p.opts.animationDuration : 0, p.$slide.removeClass("fancybox-slide--complete fancybox-slide--next fancybox-slide--previous fancybox-animated"), t !== true ? n.fancybox.stop(p.$slide) : o = false, p.$slide.siblings().trigger("onReset").remove(), i && u.$refs.container.removeClass("fancybox-is-open").addClass("fancybox-is-closing").css("transition-duration", i + "ms"), u.hideLoading(p), u.hideControls(true), u.updateCursor(), o !== "zoom" || a && i && p.type === "image" && !u.isMoved() && !p.hasError && (d = u.getThumbPos(p)) || (o = "fade"), o === "zoom" ? (n.fancybox.stop(a), s = n.fancybox.getTranslate(a), c = {
          top: s.top,
          left: s.left,
          scaleX: s.width / d.width,
          scaleY: s.height / d.height,
          width: d.width,
          height: d.height
        }, r = p.opts.zoomOpacity, r == "auto" && (r = Math.abs(p.width / p.height - d.width / d.height) > 0.1), r && (d.opacity = 0), n.fancybox.setTranslate(a, c), f(a), n.fancybox.animate(a, d, i, h), 0) : (o && i ? n.fancybox.animate(p.$slide.addClass("fancybox-slide--previous").removeClass("fancybox-slide--current"), "fancybox-animated fancybox-fx-" + o, i, h) : t === true ? setTimeout(h, i) : h(), 0)));
      },
      cleanUp: function (e) {
        var o;
        var i;
        var a;
        var s = this;
        var r = s.current.opts.$orig;
        s.current.$slide.trigger("onReset");
        s.$refs.container.empty().remove();
        s.trigger("afterClose", e);
        if (s.current.opts.backFocus) {
          if (!r || !r.length || !r.is(":visible")) {
            r = s.$trigger;
          }
          if (r && r.length) {
            i = t.scrollX;
            a = t.scrollY;
            r.trigger("focus");
            n("html, body").scrollTop(a).scrollLeft(i);
          }
        }
        s.current = null;
        if (o = n.fancybox.getInstance()) {
          o.activate();
        } else {
          n("body").removeClass("fancybox-active compensate-for-scrollbar");
          n("#fancybox-style-noscroll").remove();
        }
      },
      trigger: function (t, e) {
        var o;
        var i = Array.prototype.slice.call(arguments, 1);
        var a = this;
        var s = e && e.opts ? e : a.current;
        if (s) {
          i.unshift(s);
        } else {
          s = a;
        }
        i.unshift(a);
        if (n.isFunction(s.opts[t])) {
          o = s.opts[t].apply(s, i);
        }
        if (o === false) {
          return o;
        }
        if (t !== "afterClose" && a.$refs) {
          a.$refs.container.trigger(t + ".fb", i);
        } else {
          r.trigger(t + ".fb", i);
        }
      },
      updateControls: function () {
        var t = this;
        var o = t.current;
        var i = o.index;
        var a = t.$refs.container;
        var s = t.$refs.caption;
        var r = o.opts.caption;
        o.$slide.trigger("refresh");
        if (r && r.length) {
          t.$caption = s;
          s.children().eq(0).html(r);
        } else {
          t.$caption = null;
        }
        if (!t.hasHiddenControls && !t.isIdle) {
          t.showControls();
        }
        a.find("[data-fancybox-count]").html(t.group.length);
        a.find("[data-fancybox-index]").html(i + 1);
        a.find("[data-fancybox-prev]").prop("disabled", !o.opts.loop && i <= 0);
        a.find("[data-fancybox-next]").prop("disabled", !o.opts.loop && i >= t.group.length - 1);
        if (o.type === "image") {
          a.find("[data-fancybox-zoom]").show().end().find("[data-fancybox-download]").attr("href", o.opts.image.src || o.src).show();
        } else if (o.opts.toolbar) {
          a.find("[data-fancybox-download],[data-fancybox-zoom]").hide();
        }
        if (n(e.activeElement).is(":hidden,[disabled]")) {
          t.$refs.container.trigger("focus");
        }
      },
      hideControls: function (t) {
        var e = ["infobar", "toolbar", "nav"];
        if (!!t || !this.current.opts.preventCaptionOverlap) {
          e.push("caption");
        }
        this.$refs.container.removeClass(e.map(function (t) {
          return "fancybox-show-" + t;
        }).join(" "));
        this.hasHiddenControls = true;
      },
      showControls: function () {
        var t = this;
        var e = t.current ? t.current.opts : t.opts;
        var n = t.$refs.container;
        t.hasHiddenControls = false;
        t.idleSecondsCounter = 0;
        n.toggleClass("fancybox-show-toolbar", !!e.toolbar && !!e.buttons).toggleClass("fancybox-show-infobar", !!e.infobar && !!(t.group.length > 1)).toggleClass("fancybox-show-caption", !!t.$caption).toggleClass("fancybox-show-nav", !!e.arrows && !!(t.group.length > 1)).toggleClass("fancybox-is-modal", !!e.modal);
      },
      toggleControls: function () {
        if (this.hasHiddenControls) {
          this.showControls();
        } else {
          this.hideControls();
        }
      }
    });
    n.fancybox = {
      version: "3.5.7",
      defaults: a,
      getInstance: function (t) {
        var e = n(".fancybox-container:not(\".fancybox-is-closing\"):last").data("FancyBox");
        var o = Array.prototype.slice.call(arguments, 1);
        return e instanceof g && (n.type(t) === "string" ? e[t].apply(e, o) : n.type(t) === "function" && t.apply(e, o), e);
      },
      open: function (t, e, n) {
        return new g(t, e, n);
      },
      close: function (t) {
        var e = this.getInstance();
        if (e) {
          e.close();
          if (t === true) {
            this.close(t);
          }
        }
      },
      destroy: function () {
        this.close(true);
        r.add("body").off("click.fb-start", "**");
      },
      isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),
      use3d: function () {
        var n = e.createElement("div");
        return t.getComputedStyle && t.getComputedStyle(n) && t.getComputedStyle(n).getPropertyValue("transform") && (!e.documentMode || !(e.documentMode < 11));
      }(),
      getTranslate: function (t) {
        var e;
        return !!t && !!t.length && {
          top: (e = t[0].getBoundingClientRect()).top || 0,
          left: e.left || 0,
          width: e.width,
          height: e.height,
          opacity: parseFloat(t.css("opacity"))
        };
      },
      setTranslate: function (t, e) {
        var n = "";
        var o = {};
        if (t && e) {
          if (e.left !== undefined || e.top !== undefined) {
            n = (e.left === undefined ? t.position().left : e.left) + "px, " + (e.top === undefined ? t.position().top : e.top) + "px";
            n = this.use3d ? "translate3d(" + n + ", 0px)" : "translate(" + n + ")";
          }
          if (e.scaleX !== undefined && e.scaleY !== undefined) {
            n += " scale(" + e.scaleX + ", " + e.scaleY + ")";
          } else if (e.scaleX !== undefined) {
            n += " scaleX(" + e.scaleX + ")";
          }
          if (n.length) {
            o.transform = n;
          }
          if (e.opacity !== undefined) {
            o.opacity = e.opacity;
          }
          if (e.width !== undefined) {
            o.width = e.width;
          }
          if (e.height !== undefined) {
            o.height = e.height;
          }
          return t.css(o);
        }
      },
      animate: function (t, e, o, i, a) {
        var s;
        var r = this;
        if (n.isFunction(o)) {
          i = o;
          o = null;
        }
        r.stop(t);
        s = r.getTranslate(t);
        t.on(u, function (c) {
          if (!c || !c.originalEvent || t.is(c.originalEvent.target) && c.originalEvent.propertyName != "z-index") {
            r.stop(t);
            if (n.isNumeric(o)) {
              t.css("transition-duration", "");
            }
            if (n.isPlainObject(e)) {
              if (e.scaleX !== undefined && e.scaleY !== undefined) {
                r.setTranslate(t, {
                  top: e.top,
                  left: e.left,
                  width: s.width * e.scaleX,
                  height: s.height * e.scaleY,
                  scaleX: 1,
                  scaleY: 1
                });
              }
            } else if (a !== true) {
              t.removeClass(e);
            }
            if (n.isFunction(i)) {
              i(c);
            }
          }
        });
        if (n.isNumeric(o)) {
          t.css("transition-duration", o + "ms");
        }
        if (n.isPlainObject(e)) {
          if (e.scaleX !== undefined && e.scaleY !== undefined) {
            delete e.width;
            delete e.height;
            if (t.parent().hasClass("fancybox-slide--image")) {
              t.parent().addClass("fancybox-is-scaling");
            }
          }
          n.fancybox.setTranslate(t, e);
        } else {
          t.addClass(e);
        }
        t.data("timer", setTimeout(function () {
          t.trigger(u);
        }, o + 33));
      },
      stop: function (t, e) {
        if (t && t.length) {
          clearTimeout(t.data("timer"));
          if (e) {
            t.trigger(u);
          }
          t.off(u).css("transition-duration", "");
          t.parent().removeClass("fancybox-is-scaling");
        }
      }
    };
    n.fn.fancybox = function (t) {
      var e;
      if (e = (t = t || {}).selector || false) {
        n("body").off("click.fb-start", e).on("click.fb-start", e, {
          options: t
        }, i);
      } else {
        this.off("click.fb-start").on("click.fb-start", {
          items: this,
          options: t
        }, i);
      }
      return this;
    };
    r.on("click.fb-start", "[data-fancybox]", i);
    r.on("click.fb-start", "[data-fancybox-trigger]", function (t) {
      n("[data-fancybox=\"" + n(this).attr("data-fancybox-trigger") + "\"]").eq(n(this).attr("data-fancybox-index") || 0).trigger("click.fb-start", {
        $trigger: n(this)
      });
    });
    (function () {
      var t = null;
      r.on("mousedown mouseup focus blur", ".fancybox-button", function (e) {
        switch (e.type) {
          case "mousedown":
            t = n(this);
            break;
          case "mouseup":
            t = null;
            break;
          case "focusin":
            n(".fancybox-button").removeClass("fancybox-focus");
            if (!n(this).is(t) && !n(this).is("[disabled]")) {
              n(this).addClass("fancybox-focus");
            }
            break;
          case "focusout":
            n(".fancybox-button").removeClass("fancybox-focus");
        }
      });
    })();
  }
})(window, document, jQuery);
(function (t) {
  "use strict";

  var e = {
    youtube: {
      matcher: /(youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(watch\?(.*&)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(.*)|[\w-]{11}|\?listType=(.*)&list=(.*))(.*)/i,
      params: {
        autoplay: 1,
        autohide: 1,
        fs: 1,
        rel: 0,
        hd: 1,
        wmode: "transparent",
        enablejsapi: 1,
        html5: 1
      },
      paramPlace: 8,
      type: "iframe",
      url: "https://www.youtube-nocookie.com/embed/$4",
      thumb: "https://img.youtube.com/vi/$4/hqdefault.jpg"
    },
    vimeo: {
      matcher: /^.+vimeo.com\/(.*\/)?([\d]+)(.*)?/,
      params: {
        autoplay: 1,
        hd: 1,
        show_title: 1,
        show_byline: 1,
        show_portrait: 0,
        fullscreen: 1
      },
      paramPlace: 3,
      type: "iframe",
      url: "//player.vimeo.com/video/$2"
    },
    instagram: {
      matcher: /(instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+)\/?/i,
      type: "image",
      url: "//$1/p/$2/media/?size=l"
    },
    gmap_place: {
      matcher: /(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(((maps\/(place\/(.*)\/)?\@(.*),(\d+.?\d+?)z))|(\?ll=))(.*)?/i,
      type: "iframe",
      url: function (t) {
        return "//maps.google." + t[2] + "/?ll=" + (t[9] ? t[9] + "&z=" + Math.floor(t[10]) + (t[12] ? t[12].replace(/^\//, "&") : "") : t[12] + "").replace(/\?/, "&") + "&output=" + (t[12] && t[12].indexOf("layer=c") > 0 ? "svembed" : "embed");
      }
    },
    gmap_search: {
      matcher: /(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(maps\/search\/)(.*)/i,
      type: "iframe",
      url: function (t) {
        return "//maps.google." + t[2] + "/maps?q=" + t[5].replace("query=", "q=").replace("api=1", "") + "&output=embed";
      }
    }
  };
  function n(e, n, o) {
    if (e) {
      o = o || "";
      if (t.type(o) === "object") {
        o = t.param(o, true);
      }
      t.each(n, function (t, n) {
        e = e.replace("$" + t, n || "");
      });
      if (o.length) {
        e += (e.indexOf("?") > 0 ? "&" : "?") + o;
      }
      return e;
    }
  }
  t(document).on("objectNeedsType.fb", function (o, i, a) {
    var s;
    var r;
    var c;
    var l;
    var d;
    var u;
    var f;
    var p = a.src || "";
    var h = false;
    s = t.extend(true, {}, e, a.opts.media);
    t.each(s, function (e, o) {
      if (c = p.match(o.matcher)) {
        h = o.type;
        f = e;
        u = {};
        if (o.paramPlace && c[o.paramPlace]) {
          if ((d = c[o.paramPlace])[0] == "?") {
            d = d.substring(1);
          }
          d = d.split("&");
          for (var i = 0; i < d.length; ++i) {
            var s = d[i].split("=", 2);
            if (s.length == 2) {
              u[s[0]] = decodeURIComponent(s[1].replace(/\+/g, " "));
            }
          }
        }
        l = t.extend(true, {}, o.params, a.opts[e], u);
        p = t.type(o.url) === "function" ? o.url.call(this, c, l, a) : n(o.url, c, l);
        r = t.type(o.thumb) === "function" ? o.thumb.call(this, c, l, a) : n(o.thumb, c);
        if (e === "youtube") {
          p = p.replace(/&t=((\d+)m)?(\d+)s/, function (t, e, n, o) {
            return "&start=" + ((n ? parseInt(n, 10) * 60 : 0) + parseInt(o, 10));
          });
        } else if (e === "vimeo") {
          p = p.replace("&%23", "#");
        }
        return false;
      }
    });
    if (h) {
      if (!a.opts.thumb && (!a.opts.$thumb || !a.opts.$thumb.length)) {
        a.opts.thumb = r;
      }
      if (h === "iframe") {
        a.opts = t.extend(true, a.opts, {
          iframe: {
            preload: false,
            attr: {
              scrolling: "no"
            }
          }
        });
      }
      t.extend(a, {
        type: h,
        src: p,
        origSrc: a.src,
        contentSource: f,
        contentType: h === "image" ? "image" : f == "gmap_place" || f == "gmap_search" ? "map" : "video"
      });
    } else if (p) {
      a.type = a.opts.defaultType;
    }
  });
  var o = {
    youtube: {
      src: "https://www.youtube.com/iframe_api",
      class: "YT",
      loading: false,
      loaded: false
    },
    vimeo: {
      src: "https://player.vimeo.com/api/player.js",
      class: "Vimeo",
      loading: false,
      loaded: false
    },
    load: function (t) {
      var e;
      var n = this;
      if (this[t].loaded) {
        setTimeout(function () {
          n.done(t);
        });
      } else if (!this[t].loading) {
        this[t].loading = true;
        (e = document.createElement("script")).type = "text/javascript";
        e.src = this[t].src;
        if (t === "youtube") {
          window.onYouTubeIframeAPIReady = function () {
            n[t].loaded = true;
            n.done(t);
          };
        } else {
          e.onload = function () {
            n[t].loaded = true;
            n.done(t);
          };
        }
        document.body.appendChild(e);
      }
    },
    done: function (e) {
      var n;
      var o;
      if (e === "youtube") {
        delete window.onYouTubeIframeAPIReady;
      }
      if (n = t.fancybox.getInstance()) {
        o = n.current.$content.find("iframe");
        if (e === "youtube" && YT !== undefined && YT) {
          new YT.Player(o.attr("id"), {
            events: {
              onStateChange: function (t) {
                if (t.data == 0) {
                  n.next();
                }
              }
            }
          });
        } else if (e === "vimeo" && Vimeo !== undefined && Vimeo) {
          new Vimeo.Player(o).on("ended", function () {
            n.next();
          });
        }
      }
    }
  };
  t(document).on({
    "afterShow.fb": function (t, e, n) {
      if (e.group.length > 1 && (n.contentSource === "youtube" || n.contentSource === "vimeo")) {
        o.load(n.contentSource);
      }
    }
  });
})(jQuery);
(function (t, e, n) {
  "use strict";

  var o = t.requestAnimationFrame || t.webkitRequestAnimationFrame || t.mozRequestAnimationFrame || t.oRequestAnimationFrame || function (e) {
    return t.setTimeout(e, 1000 / 60);
  };
  var i = t.cancelAnimationFrame || t.webkitCancelAnimationFrame || t.mozCancelAnimationFrame || t.oCancelAnimationFrame || function (e) {
    t.clearTimeout(e);
  };
  function a(e) {
    var n = [];
    for (var o in e = (e = e.originalEvent || e || t.e).touches && e.touches.length ? e.touches : e.changedTouches && e.changedTouches.length ? e.changedTouches : [e]) {
      if (e[o].pageX) {
        n.push({
          x: e[o].pageX,
          y: e[o].pageY
        });
      } else if (e[o].clientX) {
        n.push({
          x: e[o].clientX,
          y: e[o].clientY
        });
      }
    }
    return n;
  }
  function s(t, e, n) {
    if (e && t) {
      if (n === "x") {
        return t.x - e.x;
      } else if (n === "y") {
        return t.y - e.y;
      } else {
        return Math.sqrt(Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2));
      }
    } else {
      return 0;
    }
  }
  function r(t) {
    if (t.is("a,area,button,[role=\"button\"],input,label,select,summary,textarea,video,audio,iframe") || n.isFunction(t.get(0).onclick) || t.data("selectable")) {
      return true;
    }
    for (var e = 0, o = t[0].attributes, i = o.length; e < i; e++) {
      if (o[e].nodeName.substr(0, 14) === "data-fancybox-") {
        return true;
      }
    }
    return false;
  }
  function c(e) {
    var n = t.getComputedStyle(e)["overflow-y"];
    var o = t.getComputedStyle(e)["overflow-x"];
    var i = (n === "scroll" || n === "auto") && e.scrollHeight > e.clientHeight;
    var a = (o === "scroll" || o === "auto") && e.scrollWidth > e.clientWidth;
    return i || a;
  }
  function l(t) {
    for (var e = false; !(e = c(t.get(0))) && (t = t.parent()).length && !t.hasClass("fancybox-stage") && !t.is("body"););
    return e;
  }
  function d(t) {
    var e = this;
    e.instance = t;
    e.$bg = t.$refs.bg;
    e.$stage = t.$refs.stage;
    e.$container = t.$refs.container;
    e.destroy();
    e.$container.on("touchstart.fb.touch mousedown.fb.touch", n.proxy(e, "ontouchstart"));
  }
  d.prototype.destroy = function () {
    var t = this;
    t.$container.off(".fb.touch");
    n(e).off(".fb.touch");
    if (t.requestId) {
      i(t.requestId);
      t.requestId = null;
    }
    if (t.tapped) {
      clearTimeout(t.tapped);
      t.tapped = null;
    }
  };
  d.prototype.ontouchstart = function (o) {
    var i = this;
    var c = n(o.target);
    var d = i.instance;
    var u = d.current;
    var f = u.$slide;
    var p = u.$content;
    var h = o.type == "touchstart";
    if (h) {
      i.$container.off("mousedown.fb.touch");
    }
    if ((!o.originalEvent || o.originalEvent.button != 2) && f.length && c.length && !r(c) && !r(c.parent()) && (c.is("img") || !(o.originalEvent.clientX > c[0].clientWidth + c.offset().left))) {
      if (!u || d.isAnimating || u.$slide.hasClass("fancybox-animated")) {
        o.stopPropagation();
        o.preventDefault();
        return;
      }
      i.realPoints = i.startPoints = a(o);
      if (i.startPoints.length) {
        if (u.touch) {
          o.stopPropagation();
        }
        i.startEvent = o;
        i.canTap = true;
        i.$target = c;
        i.$content = p;
        i.opts = u.opts.touch;
        i.isPanning = false;
        i.isSwiping = false;
        i.isZooming = false;
        i.isScrolling = false;
        i.canPan = d.canPan();
        i.startTime = new Date().getTime();
        i.distanceX = i.distanceY = i.distance = 0;
        i.canvasWidth = Math.round(f[0].clientWidth);
        i.canvasHeight = Math.round(f[0].clientHeight);
        i.contentLastPos = null;
        i.contentStartPos = n.fancybox.getTranslate(i.$content) || {
          top: 0,
          left: 0
        };
        i.sliderStartPos = n.fancybox.getTranslate(f);
        i.stagePos = n.fancybox.getTranslate(d.$refs.stage);
        i.sliderStartPos.top -= i.stagePos.top;
        i.sliderStartPos.left -= i.stagePos.left;
        i.contentStartPos.top -= i.stagePos.top;
        i.contentStartPos.left -= i.stagePos.left;
        n(e).off(".fb.touch").on(h ? "touchend.fb.touch touchcancel.fb.touch" : "mouseup.fb.touch mouseleave.fb.touch", n.proxy(i, "ontouchend")).on(h ? "touchmove.fb.touch" : "mousemove.fb.touch", n.proxy(i, "ontouchmove"));
        if (n.fancybox.isMobile) {
          e.addEventListener("scroll", i.onscroll, true);
        }
        if ((i.opts || i.canPan) && (c.is(i.$stage) || i.$stage.find(c).length) || (c.is(".fancybox-image") && o.preventDefault(), n.fancybox.isMobile && c.parents(".fancybox-caption").length)) {
          i.isScrollable = l(c) || l(c.parent());
          if (!n.fancybox.isMobile || !i.isScrollable) {
            o.preventDefault();
          }
          if (i.startPoints.length === 1 || u.hasError) {
            if (i.canPan) {
              n.fancybox.stop(i.$content);
              i.isPanning = true;
            } else {
              i.isSwiping = true;
            }
            i.$container.addClass("fancybox-is-grabbing");
          }
          if (i.startPoints.length === 2 && u.type === "image" && (u.isLoaded || u.$ghost)) {
            i.canTap = false;
            i.isSwiping = false;
            i.isPanning = false;
            i.isZooming = true;
            n.fancybox.stop(i.$content);
            i.centerPointStartX = (i.startPoints[0].x + i.startPoints[1].x) * 0.5 - n(t).scrollLeft();
            i.centerPointStartY = (i.startPoints[0].y + i.startPoints[1].y) * 0.5 - n(t).scrollTop();
            i.percentageOfImageAtPinchPointX = (i.centerPointStartX - i.contentStartPos.left) / i.contentStartPos.width;
            i.percentageOfImageAtPinchPointY = (i.centerPointStartY - i.contentStartPos.top) / i.contentStartPos.height;
            i.startDistanceBetweenFingers = s(i.startPoints[0], i.startPoints[1]);
          }
        }
      }
    }
  };
  d.prototype.onscroll = function (t) {
    this.isScrolling = true;
    e.removeEventListener("scroll", this.onscroll, true);
  };
  d.prototype.ontouchmove = function (t) {
    var e = this;
    if (t.originalEvent.buttons !== undefined && t.originalEvent.buttons === 0) {
      e.ontouchend(t);
      return;
    } else if (e.isScrolling) {
      e.canTap = false;
      return;
    } else {
      e.newPoints = a(t);
      if ((e.opts || e.canPan) && e.newPoints.length && e.newPoints.length) {
        if (!e.isSwiping || e.isSwiping !== true) {
          t.preventDefault();
        }
        e.distanceX = s(e.newPoints[0], e.startPoints[0], "x");
        e.distanceY = s(e.newPoints[0], e.startPoints[0], "y");
        e.distance = s(e.newPoints[0], e.startPoints[0]);
        if (e.distance > 0) {
          if (e.isSwiping) {
            e.onSwipe(t);
          } else if (e.isPanning) {
            e.onPan();
          } else if (e.isZooming) {
            e.onZoom();
          }
        }
      }
      return;
    }
  };
  d.prototype.onSwipe = function (e) {
    var a;
    var s = this;
    var r = s.instance;
    var c = s.isSwiping;
    var l = s.sliderStartPos.left || 0;
    if (c !== true) {
      if (c == "x") {
        if (s.distanceX > 0 && (s.instance.group.length < 2 || s.instance.current.index === 0 && !s.instance.current.opts.loop)) {
          l += Math.pow(s.distanceX, 0.8);
        } else if (s.distanceX < 0 && (s.instance.group.length < 2 || s.instance.current.index === s.instance.group.length - 1 && !s.instance.current.opts.loop)) {
          l -= Math.pow(-s.distanceX, 0.8);
        } else {
          l += s.distanceX;
        }
      }
      s.sliderLastPos = {
        top: c == "x" ? 0 : s.sliderStartPos.top + s.distanceY,
        left: l
      };
      if (s.requestId) {
        i(s.requestId);
        s.requestId = null;
      }
      s.requestId = o(function () {
        if (s.sliderLastPos) {
          n.each(s.instance.slides, function (t, e) {
            var o = e.pos - s.instance.currPos;
            n.fancybox.setTranslate(e.$slide, {
              top: s.sliderLastPos.top,
              left: s.sliderLastPos.left + o * s.canvasWidth + o * e.opts.gutter
            });
          });
          s.$container.addClass("fancybox-is-sliding");
        }
      });
    } else if (Math.abs(s.distance) > 10) {
      s.canTap = false;
      if (r.group.length < 2 && s.opts.vertical) {
        s.isSwiping = "y";
      } else if (r.isDragging || s.opts.vertical === false || s.opts.vertical === "auto" && n(t).width() > 800) {
        s.isSwiping = "x";
      } else {
        a = Math.abs(Math.atan2(s.distanceY, s.distanceX) * 180 / Math.PI);
        s.isSwiping = a > 45 && a < 135 ? "y" : "x";
      }
      if (s.isSwiping === "y" && n.fancybox.isMobile && s.isScrollable) {
        s.isScrolling = true;
        return;
      }
      r.isDragging = s.isSwiping;
      s.startPoints = s.newPoints;
      n.each(r.slides, function (t, e) {
        var o;
        var i;
        n.fancybox.stop(e.$slide);
        o = n.fancybox.getTranslate(e.$slide);
        i = n.fancybox.getTranslate(r.$refs.stage);
        e.$slide.css({
          transform: "",
          opacity: "",
          "transition-duration": ""
        }).removeClass("fancybox-animated").removeClass(function (t, e) {
          return (e.match(/(^|\s)fancybox-fx-\S+/g) || []).join(" ");
        });
        if (e.pos === r.current.pos) {
          s.sliderStartPos.top = o.top - i.top;
          s.sliderStartPos.left = o.left - i.left;
        }
        n.fancybox.setTranslate(e.$slide, {
          top: o.top - i.top,
          left: o.left - i.left
        });
      });
      if (r.SlideShow && r.SlideShow.isActive) {
        r.SlideShow.stop();
      }
    }
  };
  d.prototype.onPan = function () {
    var t = this;
    if (s(t.newPoints[0], t.realPoints[0]) < (n.fancybox.isMobile ? 10 : 5)) {
      t.startPoints = t.newPoints;
    } else {
      t.canTap = false;
      t.contentLastPos = t.limitMovement();
      if (t.requestId) {
        i(t.requestId);
      }
      t.requestId = o(function () {
        n.fancybox.setTranslate(t.$content, t.contentLastPos);
      });
    }
  };
  d.prototype.limitMovement = function () {
    var t;
    var e;
    var n;
    var o;
    var i;
    var a;
    var s = this;
    var r = s.canvasWidth;
    var c = s.canvasHeight;
    var l = s.distanceX;
    var d = s.distanceY;
    var u = s.contentStartPos;
    var f = u.left;
    var p = u.top;
    var h = u.width;
    var g = u.height;
    i = h > r ? f + l : f;
    a = p + d;
    t = Math.max(0, r * 0.5 - h * 0.5);
    e = Math.max(0, c * 0.5 - g * 0.5);
    n = Math.min(r - h, r * 0.5 - h * 0.5);
    o = Math.min(c - g, c * 0.5 - g * 0.5);
    if (l > 0 && i > t) {
      i = t - 1 + Math.pow(-t + f + l, 0.8) || 0;
    }
    if (l < 0 && i < n) {
      i = n + 1 - Math.pow(n - f - l, 0.8) || 0;
    }
    if (d > 0 && a > e) {
      a = e - 1 + Math.pow(-e + p + d, 0.8) || 0;
    }
    if (d < 0 && a < o) {
      a = o + 1 - Math.pow(o - p - d, 0.8) || 0;
    }
    return {
      top: a,
      left: i
    };
  };
  d.prototype.limitPosition = function (t, e, n, o) {
    var i = this.canvasWidth;
    var a = this.canvasHeight;
    if (n > i) {
      t = (t = t > 0 ? 0 : t) < i - n ? i - n : t;
    } else {
      t = Math.max(0, i / 2 - n / 2);
    }
    if (o > a) {
      e = (e = e > 0 ? 0 : e) < a - o ? a - o : e;
    } else {
      e = Math.max(0, a / 2 - o / 2);
    }
    return {
      top: e,
      left: t
    };
  };
  d.prototype.onZoom = function () {
    var e = this;
    var a = e.contentStartPos;
    var r = a.width;
    var c = a.height;
    var l = a.left;
    var d = a.top;
    var u = s(e.newPoints[0], e.newPoints[1]) / e.startDistanceBetweenFingers;
    var f = Math.floor(r * u);
    var p = Math.floor(c * u);
    var h = (r - f) * e.percentageOfImageAtPinchPointX;
    var g = (c - p) * e.percentageOfImageAtPinchPointY;
    var b = (e.newPoints[0].x + e.newPoints[1].x) / 2 - n(t).scrollLeft();
    var m = (e.newPoints[0].y + e.newPoints[1].y) / 2 - n(t).scrollTop();
    var v = b - e.centerPointStartX;
    var y = {
      top: d + (g + (m - e.centerPointStartY)),
      left: l + (h + v),
      scaleX: u,
      scaleY: u
    };
    e.canTap = false;
    e.newWidth = f;
    e.newHeight = p;
    e.contentLastPos = y;
    if (e.requestId) {
      i(e.requestId);
    }
    e.requestId = o(function () {
      n.fancybox.setTranslate(e.$content, e.contentLastPos);
    });
  };
  d.prototype.ontouchend = function (t) {
    var o = this;
    var s = o.isSwiping;
    var r = o.isPanning;
    var c = o.isZooming;
    var l = o.isScrolling;
    o.endPoints = a(t);
    o.dMs = Math.max(new Date().getTime() - o.startTime, 1);
    o.$container.removeClass("fancybox-is-grabbing");
    n(e).off(".fb.touch");
    e.removeEventListener("scroll", o.onscroll, true);
    if (o.requestId) {
      i(o.requestId);
      o.requestId = null;
    }
    o.isSwiping = false;
    o.isPanning = false;
    o.isZooming = false;
    o.isScrolling = false;
    o.instance.isDragging = false;
    if (o.canTap) {
      return o.onTap(t);
    }
    o.speed = 100;
    o.velocityX = o.distanceX / o.dMs * 0.5;
    o.velocityY = o.distanceY / o.dMs * 0.5;
    if (r) {
      o.endPanning();
    } else if (c) {
      o.endZooming();
    } else {
      o.endSwiping(s, l);
    }
  };
  d.prototype.endSwiping = function (t, e) {
    var o = this;
    var i = false;
    var a = o.instance.group.length;
    var s = Math.abs(o.distanceX);
    var r = t == "x" && a > 1 && (o.dMs > 130 && s > 10 || s > 50);
    o.sliderLastPos = null;
    if (t == "y" && !e && Math.abs(o.distanceY) > 50) {
      n.fancybox.animate(o.instance.current.$slide, {
        top: o.sliderStartPos.top + o.distanceY + o.velocityY * 150,
        opacity: 0
      }, 200);
      i = o.instance.close(true, 250);
    } else if (r && o.distanceX > 0) {
      i = o.instance.previous(300);
    } else if (r && o.distanceX < 0) {
      i = o.instance.next(300);
    }
    if (i === false && (t == "x" || t == "y")) {
      o.instance.centerSlide(200);
    }
    o.$container.removeClass("fancybox-is-sliding");
  };
  d.prototype.endPanning = function () {
    var t;
    var e;
    var o;
    var i = this;
    if (i.contentLastPos) {
      if (i.opts.momentum === false || i.dMs > 350) {
        t = i.contentLastPos.left;
        e = i.contentLastPos.top;
      } else {
        t = i.contentLastPos.left + i.velocityX * 500;
        e = i.contentLastPos.top + i.velocityY * 500;
      }
      (o = i.limitPosition(t, e, i.contentStartPos.width, i.contentStartPos.height)).width = i.contentStartPos.width;
      o.height = i.contentStartPos.height;
      n.fancybox.animate(i.$content, o, 366);
    }
  };
  d.prototype.endZooming = function () {
    var t;
    var e;
    var o;
    var i;
    var a = this;
    var s = a.instance.current;
    var r = a.newWidth;
    var c = a.newHeight;
    if (a.contentLastPos) {
      t = a.contentLastPos.left;
      i = {
        top: e = a.contentLastPos.top,
        left: t,
        width: r,
        height: c,
        scaleX: 1,
        scaleY: 1
      };
      n.fancybox.setTranslate(a.$content, i);
      if (r < a.canvasWidth && c < a.canvasHeight) {
        a.instance.scaleToFit(150);
      } else if (r > s.width || c > s.height) {
        a.instance.scaleToActual(a.centerPointStartX, a.centerPointStartY, 150);
      } else {
        o = a.limitPosition(t, e, r, c);
        n.fancybox.animate(a.$content, o, 150);
      }
    }
  };
  d.prototype.onTap = function (e) {
    var o;
    var i = this;
    var s = n(e.target);
    var r = i.instance;
    var c = r.current;
    var l = e && a(e) || i.startPoints;
    var d = l[0] ? l[0].x - n(t).scrollLeft() - i.stagePos.left : 0;
    var u = l[0] ? l[0].y - n(t).scrollTop() - i.stagePos.top : 0;
    function f(t) {
      var o = c.opts[t];
      if (n.isFunction(o)) {
        o = o.apply(r, [c, e]);
      }
      if (o) {
        switch (o) {
          case "close":
            r.close(i.startEvent);
            break;
          case "toggleControls":
            r.toggleControls();
            break;
          case "next":
            r.next();
            break;
          case "nextOrClose":
            if (r.group.length > 1) {
              r.next();
            } else {
              r.close(i.startEvent);
            }
            break;
          case "zoom":
            if (c.type == "image" && (c.isLoaded || c.$ghost)) {
              if (r.canPan()) {
                r.scaleToFit();
              } else if (r.isScaledDown()) {
                r.scaleToActual(d, u);
              } else if (r.group.length < 2) {
                r.close(i.startEvent);
              }
            }
        }
      }
    }
    if ((!e.originalEvent || e.originalEvent.button != 2) && (s.is("img") || !(d > s[0].clientWidth + s.offset().left))) {
      if (s.is(".fancybox-bg,.fancybox-inner,.fancybox-outer,.fancybox-container")) {
        o = "Outside";
      } else if (s.is(".fancybox-slide")) {
        o = "Slide";
      } else {
        if (!r.current.$content || !r.current.$content.find(s).addBack().filter(s).length) {
          return;
        }
        o = "Content";
      }
      if (i.tapped) {
        clearTimeout(i.tapped);
        i.tapped = null;
        if (Math.abs(d - i.tapX) > 50 || Math.abs(u - i.tapY) > 50) {
          return this;
        }
        f("dblclick" + o);
      } else {
        i.tapX = d;
        i.tapY = u;
        if (c.opts["dblclick" + o] && c.opts["dblclick" + o] !== c.opts["click" + o]) {
          i.tapped = setTimeout(function () {
            i.tapped = null;
            if (!r.isAnimating) {
              f("click" + o);
            }
          }, 500);
        } else {
          f("click" + o);
        }
      }
      return this;
    }
  };
  n(e).on("onActivate.fb", function (t, e) {
    if (e && !e.Guestures) {
      e.Guestures = new d(e);
    }
  }).on("beforeClose.fb", function (t, e) {
    if (e && e.Guestures) {
      e.Guestures.destroy();
    }
  });
})(window, document, jQuery);
(function (t, e) {
  "use strict";

  e.extend(true, e.fancybox.defaults, {
    btnTpl: {
      slideShow: "<button data-fancybox-play class=\"fancybox-button fancybox-button--play\" title=\"{{PLAY_START}}\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M6.5 5.4v13.2l11-6.6z\"/></svg><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M8.33 5.75h2.2v12.5h-2.2V5.75zm5.15 0h2.2v12.5h-2.2V5.75z\"/></svg></button>"
    },
    slideShow: {
      autoStart: false,
      speed: 3000,
      progress: true
    }
  });
  function n(t) {
    this.instance = t;
    this.init();
  }
  e.extend(n.prototype, {
    timer: null,
    isActive: false,
    $button: null,
    init: function () {
      var t = this;
      var n = t.instance;
      var o = n.group[n.currIndex].opts.slideShow;
      t.$button = n.$refs.toolbar.find("[data-fancybox-play]").on("click", function () {
        t.toggle();
      });
      if (n.group.length < 2 || !o) {
        t.$button.hide();
      } else if (o.progress) {
        t.$progress = e("<div class=\"fancybox-progress\"></div>").appendTo(n.$refs.inner);
      }
    },
    set: function (t) {
      var n = this;
      var o = n.instance;
      var i = o.current;
      if (i && (t === true || i.opts.loop || o.currIndex < o.group.length - 1)) {
        if (n.isActive && i.contentType !== "video") {
          if (n.$progress) {
            e.fancybox.animate(n.$progress.show(), {
              scaleX: 1
            }, i.opts.slideShow.speed);
          }
          n.timer = setTimeout(function () {
            if (o.current.opts.loop || o.current.index != o.group.length - 1) {
              o.next();
            } else {
              o.jumpTo(0);
            }
          }, i.opts.slideShow.speed);
        }
      } else {
        n.stop();
        o.idleSecondsCounter = 0;
        o.showControls();
      }
    },
    clear: function () {
      var t = this;
      clearTimeout(t.timer);
      t.timer = null;
      if (t.$progress) {
        t.$progress.removeAttr("style").hide();
      }
    },
    start: function () {
      var t = this;
      var e = t.instance.current;
      if (e) {
        t.$button.attr("title", (e.opts.i18n[e.opts.lang] || e.opts.i18n.en).PLAY_STOP).removeClass("fancybox-button--play").addClass("fancybox-button--pause");
        t.isActive = true;
        if (e.isComplete) {
          t.set(true);
        }
        t.instance.trigger("onSlideShowChange", true);
      }
    },
    stop: function () {
      var t = this;
      var e = t.instance.current;
      t.clear();
      t.$button.attr("title", (e.opts.i18n[e.opts.lang] || e.opts.i18n.en).PLAY_START).removeClass("fancybox-button--pause").addClass("fancybox-button--play");
      t.isActive = false;
      t.instance.trigger("onSlideShowChange", false);
      if (t.$progress) {
        t.$progress.removeAttr("style").hide();
      }
    },
    toggle: function () {
      var t = this;
      if (t.isActive) {
        t.stop();
      } else {
        t.start();
      }
    }
  });
  e(t).on({
    "onInit.fb": function (t, e) {
      if (e && !e.SlideShow) {
        e.SlideShow = new n(e);
      }
    },
    "beforeShow.fb": function (t, e, n, o) {
      var i = e && e.SlideShow;
      if (o) {
        if (i && n.opts.slideShow.autoStart) {
          i.start();
        }
      } else if (i && i.isActive) {
        i.clear();
      }
    },
    "afterShow.fb": function (t, e, n) {
      var o = e && e.SlideShow;
      if (o && o.isActive) {
        o.set();
      }
    },
    "afterKeydown.fb": function (n, o, i, a, s) {
      var r = o && o.SlideShow;
      if (!!r && !!i.opts.slideShow && (s === 80 || s === 32) && !e(t.activeElement).is("button,a,input")) {
        a.preventDefault();
        r.toggle();
      }
    },
    "beforeClose.fb onDeactivate.fb": function (t, e) {
      var n = e && e.SlideShow;
      if (n) {
        n.stop();
      }
    }
  });
  e(t).on("visibilitychange", function () {
    var n = e.fancybox.getInstance();
    var o = n && n.SlideShow;
    if (o && o.isActive) {
      if (t.hidden) {
        o.clear();
      } else {
        o.set();
      }
    }
  });
})(document, jQuery);
(function (t, e) {
  "use strict";

  var n = function () {
    for (var e = [["requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror"], ["webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror"], ["webkitRequestFullScreen", "webkitCancelFullScreen", "webkitCurrentFullScreenElement", "webkitCancelFullScreen", "webkitfullscreenchange", "webkitfullscreenerror"], ["mozRequestFullScreen", "mozCancelFullScreen", "mozFullScreenElement", "mozFullScreenEnabled", "mozfullscreenchange", "mozfullscreenerror"], ["msRequestFullscreen", "msExitFullscreen", "msFullscreenElement", "msFullscreenEnabled", "MSFullscreenChange", "MSFullscreenError"]], n = {}, o = 0; o < e.length; o++) {
      var i = e[o];
      if (i && i[1] in t) {
        for (var a = 0; a < i.length; a++) {
          n[e[0][a]] = i[a];
        }
        return n;
      }
    }
    return false;
  }();
  if (n) {
    var o = {
      request: function (e) {
        (e = e || t.documentElement)[n.requestFullscreen](e.ALLOW_KEYBOARD_INPUT);
      },
      exit: function () {
        t[n.exitFullscreen]();
      },
      toggle: function (e) {
        e = e || t.documentElement;
        if (this.isFullscreen()) {
          this.exit();
        } else {
          this.request(e);
        }
      },
      isFullscreen: function () {
        return Boolean(t[n.fullscreenElement]);
      },
      enabled: function () {
        return Boolean(t[n.fullscreenEnabled]);
      }
    };
    e.extend(true, e.fancybox.defaults, {
      btnTpl: {
        fullScreen: "<button data-fancybox-fullscreen class=\"fancybox-button fancybox-button--fsenter\" title=\"{{FULL_SCREEN}}\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"/></svg><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M5 16h3v3h2v-5H5zm3-8H5v2h5V5H8zm6 11h2v-3h3v-2h-5zm2-11V5h-2v5h5V8z\"/></svg></button>"
      },
      fullScreen: {
        autoStart: false
      }
    });
    e(t).on(n.fullscreenchange, function () {
      var t = o.isFullscreen();
      var n = e.fancybox.getInstance();
      if (n) {
        if (n.current && n.current.type === "image" && n.isAnimating) {
          n.isAnimating = false;
          n.update(true, true, 0);
          if (!n.isComplete) {
            n.complete();
          }
        }
        n.trigger("onFullscreenChange", t);
        n.$refs.container.toggleClass("fancybox-is-fullscreen", t);
        n.$refs.toolbar.find("[data-fancybox-fullscreen]").toggleClass("fancybox-button--fsenter", !t).toggleClass("fancybox-button--fsexit", t);
      }
    });
  }
  e(t).on({
    "onInit.fb": function (t, e) {
      if (n) {
        if (e && e.group[e.currIndex].opts.fullScreen) {
          e.$refs.container.on("click.fb-fullscreen", "[data-fancybox-fullscreen]", function (t) {
            t.stopPropagation();
            t.preventDefault();
            o.toggle();
          });
          if (e.opts.fullScreen && e.opts.fullScreen.autoStart === true) {
            o.request();
          }
          e.FullScreen = o;
        } else if (e) {
          e.$refs.toolbar.find("[data-fancybox-fullscreen]").hide();
        }
      } else {
        e.$refs.toolbar.find("[data-fancybox-fullscreen]").remove();
      }
    },
    "afterKeydown.fb": function (t, e, n, o, i) {
      if (e && e.FullScreen && i === 70) {
        o.preventDefault();
        e.FullScreen.toggle();
      }
    },
    "beforeClose.fb": function (t, e) {
      if (e && e.FullScreen && e.$refs.container.hasClass("fancybox-is-fullscreen")) {
        o.exit();
      }
    }
  });
})(document, jQuery);
(function (t, e) {
  "use strict";

  var n = "fancybox-thumbs";
  e.fancybox.defaults = e.extend(true, {
    btnTpl: {
      thumbs: "<button data-fancybox-thumbs class=\"fancybox-button fancybox-button--thumbs\" title=\"{{THUMBS}}\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M14.59 14.59h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76H5.65V5.65z\"/></svg></button>"
    },
    thumbs: {
      autoStart: false,
      hideOnClose: true,
      parentEl: ".fancybox-container",
      axis: "y"
    }
  }, e.fancybox.defaults);
  function o(t) {
    this.init(t);
  }
  e.extend(o.prototype, {
    $button: null,
    $grid: null,
    $list: null,
    isVisible: false,
    isActive: false,
    init: function (t) {
      var e = this;
      var n = t.group;
      var o = 0;
      e.instance = t;
      e.opts = n[t.currIndex].opts.thumbs;
      t.Thumbs = e;
      e.$button = t.$refs.toolbar.find("[data-fancybox-thumbs]");
      for (var i = 0, a = n.length; i < a && (n[i].thumb && o++, !(o > 1)); i++);
      if (o > 1 && e.opts) {
        e.$button.removeAttr("style").on("click", function () {
          e.toggle();
        });
        e.isActive = true;
      } else {
        e.$button.hide();
      }
    },
    create: function () {
      var t;
      var o = this;
      var i = o.instance;
      var a = o.opts.parentEl;
      var s = [];
      if (!o.$grid) {
        o.$grid = e("<div class=\"" + n + " " + n + "-" + o.opts.axis + "\"></div>").appendTo(i.$refs.container.find(a).addBack().filter(a));
        o.$grid.on("click", "a", function () {
          i.jumpTo(e(this).attr("data-index"));
        });
      }
      o.$list ||= e("<div class=\"" + n + "__list\">").appendTo(o.$grid);
      e.each(i.group, function (e, n) {
        if (!(t = n.thumb) && n.type === "image") {
          t = n.src;
        }
        s.push("<a href=\"javascript:;\" tabindex=\"0\" data-index=\"" + e + "\"" + (t && t.length ? " style=\"background-image:url(" + t + ")\"" : "class=\"fancybox-thumbs-missing\"") + "></a>");
      });
      o.$list[0].innerHTML = s.join("");
      if (o.opts.axis === "x") {
        o.$list.width(parseInt(o.$grid.css("padding-right"), 10) + i.group.length * o.$list.children().eq(0).outerWidth(true));
      }
    },
    focus: function (t) {
      var e;
      var n;
      var o = this;
      var i = o.$list;
      var a = o.$grid;
      if (o.instance.current) {
        n = (e = i.children().removeClass("fancybox-thumbs-active").filter("[data-index=\"" + o.instance.current.index + "\"]").addClass("fancybox-thumbs-active")).position();
        if (o.opts.axis === "y" && (n.top < 0 || n.top > i.height() - e.outerHeight())) {
          i.stop().animate({
            scrollTop: i.scrollTop() + n.top
          }, t);
        } else if (o.opts.axis === "x" && (n.left < a.scrollLeft() || n.left > a.scrollLeft() + (a.width() - e.outerWidth()))) {
          i.parent().stop().animate({
            scrollLeft: n.left
          }, t);
        }
      }
    },
    update: function () {
      var t = this;
      t.instance.$refs.container.toggleClass("fancybox-show-thumbs", this.isVisible);
      if (t.isVisible) {
        if (!t.$grid) {
          t.create();
        }
        t.instance.trigger("onThumbsShow");
        t.focus(0);
      } else if (t.$grid) {
        t.instance.trigger("onThumbsHide");
      }
      t.instance.update();
    },
    hide: function () {
      this.isVisible = false;
      this.update();
    },
    show: function () {
      this.isVisible = true;
      this.update();
    },
    toggle: function () {
      this.isVisible = !this.isVisible;
      this.update();
    }
  });
  e(t).on({
    "onInit.fb": function (t, e) {
      var n;
      if (e && !e.Thumbs) {
        if ((n = new o(e)).isActive && n.opts.autoStart === true) {
          n.show();
        }
      }
    },
    "beforeShow.fb": function (t, e, n, o) {
      var i = e && e.Thumbs;
      if (i && i.isVisible) {
        i.focus(o ? 0 : 250);
      }
    },
    "afterKeydown.fb": function (t, e, n, o, i) {
      var a = e && e.Thumbs;
      if (a && a.isActive && i === 71) {
        o.preventDefault();
        a.toggle();
      }
    },
    "beforeClose.fb": function (t, e) {
      var n = e && e.Thumbs;
      if (n && n.isVisible && n.opts.hideOnClose !== false) {
        n.$grid.hide();
      }
    }
  });
})(document, jQuery);
(function (t, e) {
  "use strict";

  e.extend(true, e.fancybox.defaults, {
    btnTpl: {
      share: "<button data-fancybox-share class=\"fancybox-button fancybox-button--share\" title=\"{{SHARE}}\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M2.55 19c1.4-8.4 9.1-9.8 11.9-9.8V5l7 7-7 6.3v-3.5c-2.8 0-10.5 2.1-11.9 4.2z\"/></svg></button>"
    },
    share: {
      url: function (t, e) {
        return !t.currentHash && e.type !== "inline" && e.type !== "html" && (e.origSrc || e.src) || window.location;
      },
      tpl: "<div class=\"fancybox-share\"><h1>{{SHARE}}</h1><p><a class=\"fancybox-share__button fancybox-share__button--fb\" href=\"https://www.facebook.com/sharer/sharer.php?u={{url}}\"><svg viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m287 456v-299c0-21 6-35 35-35h38v-63c-7-1-29-3-55-3-54 0-91 33-91 94v306m143-254h-205v72h196\" /></svg><span>Facebook</span></a><a class=\"fancybox-share__button fancybox-share__button--tw\" href=\"https://twitter.com/intent/tweet?url={{url}}&text={{descr}}\"><svg viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m456 133c-14 7-31 11-47 13 17-10 30-27 37-46-15 10-34 16-52 20-61-62-157-7-141 75-68-3-129-35-169-85-22 37-11 86 26 109-13 0-26-4-37-9 0 39 28 72 65 80-12 3-25 4-37 2 10 33 41 57 77 57-42 30-77 38-122 34 170 111 378-32 359-208 16-11 30-25 41-42z\" /></svg><span>Twitter</span></a><a class=\"fancybox-share__button fancybox-share__button--pt\" href=\"https://www.pinterest.com/pin/create/button/?url={{url}}&description={{descr}}&media={{media}}\"><svg viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m265 56c-109 0-164 78-164 144 0 39 15 74 47 87 5 2 10 0 12-5l4-19c2-6 1-8-3-13-9-11-15-25-15-45 0-58 43-110 113-110 62 0 96 38 96 88 0 67-30 122-73 122-24 0-42-19-36-44 6-29 20-60 20-81 0-19-10-35-31-35-25 0-44 26-44 60 0 21 7 36 7 36l-30 125c-8 37-1 83 0 87 0 3 4 4 5 2 2-3 32-39 42-75l16-64c8 16 31 29 56 29 74 0 124-67 124-157 0-69-58-132-146-132z\" fill=\"#fff\"/></svg><span>Pinterest</span></a></p><p><input class=\"fancybox-share__input\" type=\"text\" value=\"{{url_raw}}\" onclick=\"select()\" /></p></div>"
    }
  });
  e(t).on("click", "[data-fancybox-share]", function () {
    var t;
    var n;
    var o = e.fancybox.getInstance();
    var i = o.current || null;
    if (i) {
      if (e.type(i.opts.share.url) === "function") {
        t = i.opts.share.url.apply(i, [o, i]);
      }
      n = i.opts.share.tpl.replace(/\{\{media\}\}/g, i.type === "image" ? encodeURIComponent(i.src) : "").replace(/\{\{url\}\}/g, encodeURIComponent(t)).replace(/\{\{url_raw\}\}/g, function (t) {
        var e = {
          "&": "&amp;",
          "<": "&lt;",
          ">": "&gt;",
          "\"": "&quot;",
          "'": "&#39;",
          "/": "&#x2F;",
          "`": "&#x60;",
          "=": "&#x3D;"
        };
        return String(t).replace(/[&<>"'`=\/]/g, function (t) {
          return e[t];
        });
      }(t)).replace(/\{\{descr\}\}/g, o.$caption ? encodeURIComponent(o.$caption.text()) : "");
      e.fancybox.open({
        src: o.translate(o, n),
        type: "html",
        opts: {
          touch: false,
          animationEffect: false,
          afterLoad: function (t, e) {
            o.$refs.container.one("beforeClose.fb", function () {
              t.close(null, 0);
            });
            e.$content.find(".fancybox-share__button").click(function () {
              window.open(this.href, "Share", "width=550, height=450");
              return false;
            });
          },
          mobile: {
            autoFocus: false
          }
        }
      });
    }
  });
})(document, jQuery);
(function (t, e, n) {
  "use strict";

  function o() {
    var e = t.location.hash.substr(1);
    var n = e.split("-");
    var o = n.length > 1 && /^\+?\d+$/.test(n[n.length - 1]) && parseInt(n.pop(-1), 10) || 1;
    return {
      hash: e,
      index: o < 1 ? 1 : o,
      gallery: n.join("-")
    };
  }
  function i(t) {
    if (t.gallery !== "") {
      n("[data-fancybox='" + n.escapeSelector(t.gallery) + "']").eq(t.index - 1).focus().trigger("click.fb-start");
    }
  }
  function a(t) {
    var e;
    var n;
    return !!t && (n = (e = t.current ? t.current.opts : t.opts).hash || (e.$orig ? e.$orig.data("fancybox") || e.$orig.data("fancybox-trigger") : "")) !== "" && n;
  }
  n.escapeSelector ||= function (t) {
    return (t + "").replace(/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g, function (t, e) {
      if (e) {
        if (t === "\0") {
          return "�";
        } else {
          return t.slice(0, -1) + "\\" + t.charCodeAt(t.length - 1).toString(16) + " ";
        }
      } else {
        return "\\" + t;
      }
    });
  };
  n(function () {
    if (n.fancybox.defaults.hash !== false) {
      n(e).on({
        "onInit.fb": function (t, e) {
          var n;
          var i;
          if (e.group[e.currIndex].opts.hash !== false) {
            n = o();
            if ((i = a(e)) && n.gallery && i == n.gallery) {
              e.currIndex = n.index - 1;
            }
          }
        },
        "beforeShow.fb": function (n, o, i, s) {
          var r;
          if (i && i.opts.hash !== false && (r = a(o))) {
            o.currentHash = r + (o.group.length > 1 ? "-" + (i.index + 1) : "");
            if (t.location.hash !== "#" + o.currentHash) {
              if (s && !o.origHash) {
                o.origHash = t.location.hash;
              }
              if (o.hashTimer) {
                clearTimeout(o.hashTimer);
              }
              o.hashTimer = setTimeout(function () {
                if ("replaceState" in t.history) {
                  t.history[s ? "pushState" : "replaceState"]({}, e.title, t.location.pathname + t.location.search + "#" + o.currentHash);
                  if (s) {
                    o.hasCreatedHistory = true;
                  }
                } else {
                  t.location.hash = o.currentHash;
                }
                o.hashTimer = null;
              }, 300);
            }
          }
        },
        "beforeClose.fb": function (n, o, i) {
          if (i && i.opts.hash !== false) {
            clearTimeout(o.hashTimer);
            if (o.currentHash && o.hasCreatedHistory) {
              t.history.back();
            } else if (o.currentHash) {
              if ("replaceState" in t.history) {
                t.history.replaceState({}, e.title, t.location.pathname + t.location.search + (o.origHash || ""));
              } else {
                t.location.hash = o.origHash;
              }
            }
            o.currentHash = null;
          }
        }
      });
      n(t).on("hashchange.fb", function () {
        var t = o();
        var e = null;
        n.each(n(".fancybox-container").get().reverse(), function (t, o) {
          var i = n(o).data("FancyBox");
          if (i && i.currentHash) {
            e = i;
            return false;
          }
        });
        if (e) {
          if (e.currentHash !== t.gallery + "-" + t.index && (t.index !== 1 || e.currentHash != t.gallery)) {
            e.currentHash = null;
            e.close();
          }
        } else if (t.gallery !== "") {
          i(t);
        }
      });
      setTimeout(function () {
        if (!n.fancybox.getInstance()) {
          i(o());
        }
      }, 50);
    }
  });
})(window, document, jQuery);
(function (t, e) {
  "use strict";

  var n = new Date().getTime();
  e(t).on({
    "onInit.fb": function (t, e, o) {
      e.$refs.stage.on("mousewheel DOMMouseScroll wheel MozMousePixelScroll", function (t) {
        var o = e.current;
        var i = new Date().getTime();
        if (!(e.group.length < 2) && o.opts.wheel !== false && (o.opts.wheel !== "auto" || o.type === "image")) {
          t.preventDefault();
          t.stopPropagation();
          if (!o.$slide.hasClass("fancybox-animated")) {
            t = t.originalEvent || t;
            if (!(i - n < 250)) {
              n = i;
              e[(-t.deltaY || -t.deltaX || t.wheelDelta || -t.detail) < 0 ? "next" : "previous"]();
            }
          }
        }
      });
    }
  });
})(document, jQuery);
